
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.47+149 (git sha1 f04b89972, clang++ 18.1.8 -fPIC -O3)

-- Parsing `aes_module.v' using frontend ` -vlog2k' --

1. Executing Verilog-2005 frontend: aes_module.v
Parsing Verilog input from `aes_module.v' to AST representation.
Storing AST representation for module `$abstract\aes_module'.
Successfully finished Verilog frontend.

-- Parsing `aes.v' using frontend ` -vlog2k' --

2. Executing Verilog-2005 frontend: aes.v
Parsing Verilog input from `aes.v' to AST representation.
Storing AST representation for module `$abstract\aes'.
Successfully finished Verilog frontend.

-- Parsing `clkgen48.v' using frontend ` -vlog2k' --

3. Executing Verilog-2005 frontend: clkgen48.v
Parsing Verilog input from `clkgen48.v' to AST representation.
Storing AST representation for module `$abstract\clkgen48'.
Successfully finished Verilog frontend.

-- Parsing `keysched.v' using frontend ` -vlog2k' --

4. Executing Verilog-2005 frontend: keysched.v
Parsing Verilog input from `keysched.v' to AST representation.
Storing AST representation for module `$abstract\keysched'.
Successfully finished Verilog frontend.

-- Parsing `mixcolumns.v' using frontend ` -vlog2k' --

5. Executing Verilog-2005 frontend: mixcolumns.v
Parsing Verilog input from `mixcolumns.v' to AST representation.
Storing AST representation for module `$abstract\mixcolumns'.
Successfully finished Verilog frontend.

-- Parsing `rcon.v' using frontend ` -vlog2k' --

6. Executing Verilog-2005 frontend: rcon.v
Parsing Verilog input from `rcon.v' to AST representation.
Storing AST representation for module `$abstract\rcon'.
Successfully finished Verilog frontend.

-- Parsing `sbox.v' using frontend ` -vlog2k' --

7. Executing Verilog-2005 frontend: sbox.v
Parsing Verilog input from `sbox.v' to AST representation.
Storing AST representation for module `$abstract\sbox'.
Successfully finished Verilog frontend.

-- Parsing `shiftrows.v' using frontend ` -vlog2k' --

8. Executing Verilog-2005 frontend: shiftrows.v
Parsing Verilog input from `shiftrows.v' to AST representation.
Storing AST representation for module `$abstract\shiftrows'.
Successfully finished Verilog frontend.

-- Parsing `subbytes.v' using frontend ` -vlog2k' --

9. Executing Verilog-2005 frontend: subbytes.v
Parsing Verilog input from `subbytes.v' to AST representation.
Storing AST representation for module `$abstract\subbytes'.
Successfully finished Verilog frontend.

-- Parsing `top_level.v' using frontend ` -vlog2k' --

10. Executing Verilog-2005 frontend: top_level.v
Parsing Verilog input from `top_level.v' to AST representation.
Storing AST representation for module `$abstract\top_level'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend ` -vlog2k' --

11. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Storing AST representation for module `$abstract\uart'.
Successfully finished Verilog frontend.

-- Parsing `xtime.v' using frontend ` -vlog2k' --

12. Executing Verilog-2005 frontend: xtime.v
Parsing Verilog input from `xtime.v' to AST representation.
Storing AST representation for module `$abstract\xtime'.
Successfully finished Verilog frontend.

-- Running command `hierarchy -top top_level' --

13. Executing HIERARCHY pass (managing design hierarchy).

14. Executing AST frontend in derive mode using pre-parsed AST for module `\top_level'.
Generating RTLIL representation for module `\top_level'.
top_level.v:80: Warning: Ignoring call to system task $dumpfile.
top_level.v:81: Warning: Ignoring call to system task $dumpvars.

14.1. Analyzing design hierarchy..
Top module:  \top_level

14.2. Executing AST frontend in derive mode using pre-parsed AST for module `\aes_module'.
Generating RTLIL representation for module `\aes_module'.
Parameter \CLKS_PER_BIT = 1003

14.3. Executing AST frontend in derive mode using pre-parsed AST for module `\uart'.
Parameter \CLKS_PER_BIT = 1003
Generating RTLIL representation for module `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011'.

14.4. Executing AST frontend in derive mode using pre-parsed AST for module `\clkgen48'.
Generating RTLIL representation for module `\clkgen48'.

14.5. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \aes_module
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011
Used module:     \clkgen48

14.6. Executing AST frontend in derive mode using pre-parsed AST for module `\aes'.
Generating RTLIL representation for module `\aes'.

14.7. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \aes_module
Used module:         \aes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011
Used module:     \clkgen48

14.8. Executing AST frontend in derive mode using pre-parsed AST for module `\keysched'.
Generating RTLIL representation for module `\keysched'.

14.9. Executing AST frontend in derive mode using pre-parsed AST for module `\mixcolumns'.
Generating RTLIL representation for module `\mixcolumns'.

14.10. Executing AST frontend in derive mode using pre-parsed AST for module `\shiftrows'.
Generating RTLIL representation for module `\shiftrows'.

14.11. Executing AST frontend in derive mode using pre-parsed AST for module `\subbytes'.
Generating RTLIL representation for module `\subbytes'.

14.12. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \aes_module
Used module:         \aes
Used module:             \keysched
Used module:             \mixcolumns
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011
Used module:     \clkgen48

14.13. Executing AST frontend in derive mode using pre-parsed AST for module `\sbox'.
Generating RTLIL representation for module `\sbox'.
Reprocessing module subbytes because instantiated module sbox has become available.
Generating RTLIL representation for module `\subbytes'.

14.14. Executing AST frontend in derive mode using pre-parsed AST for module `\xtime'.
Generating RTLIL representation for module `\xtime'.
Reprocessing module mixcolumns because instantiated module xtime has become available.
Generating RTLIL representation for module `\mixcolumns'.

14.15. Executing AST frontend in derive mode using pre-parsed AST for module `\rcon'.
Generating RTLIL representation for module `\rcon'.
Reprocessing module keysched because instantiated module sbox has become available.
Generating RTLIL representation for module `\keysched'.

14.16. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \aes_module
Used module:         \aes
Used module:             \keysched
Used module:                 \sbox
Used module:                 \rcon
Used module:             \mixcolumns
Used module:                 \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011
Used module:     \clkgen48

14.17. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \aes_module
Used module:         \aes
Used module:             \keysched
Used module:                 \sbox
Used module:                 \rcon
Used module:             \mixcolumns
Used module:                 \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011
Used module:     \clkgen48
Removing unused module `$abstract\xtime'.
Removing unused module `$abstract\uart'.
Removing unused module `$abstract\top_level'.
Removing unused module `$abstract\subbytes'.
Removing unused module `$abstract\shiftrows'.
Removing unused module `$abstract\sbox'.
Removing unused module `$abstract\rcon'.
Removing unused module `$abstract\mixcolumns'.
Removing unused module `$abstract\keysched'.
Removing unused module `$abstract\clkgen48'.
Removing unused module `$abstract\aes'.
Removing unused module `$abstract\aes_module'.
Removed 12 unused modules.

-- Running command `synth_ice40  -json top_level.json' --

15. Executing SYNTH_ICE40 pass.

15.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

15.2. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `top_level'. Setting top module to top_level.

15.2.1. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \aes_module
Used module:         \aes
Used module:             \keysched
Used module:                 \sbox
Used module:                 \rcon
Used module:             \mixcolumns
Used module:                 \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011
Used module:     \clkgen48

15.2.2. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \aes_module
Used module:         \aes
Used module:             \keysched
Used module:                 \sbox
Used module:                 \rcon
Used module:             \mixcolumns
Used module:                 \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011
Used module:     \clkgen48
Removed 0 unused modules.

15.3. Executing PROC pass (convert processes to netlists).

15.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `top_level.$proc$top_level.v:0$2'.
Cleaned up 0 empty switches.

15.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$557 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$550 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$546 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$539 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$536 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$533 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$530 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$527 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$519 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$512 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$508 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$501 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$498 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$495 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$492 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$489 in module SB_DFFSR.
Marked 2 switch rules as full_case in process $proc$keysched.v:56$310 in module keysched.
Marked 2 switch rules as full_case in process $proc$subbytes.v:31$199 in module subbytes.
Marked 2 switch rules as full_case in process $proc$mixcolumns.v:42$235 in module mixcolumns.
Removed 1 dead cases from process $proc$sbox.v:12$166 in module sbox.
Marked 1 switch rules as full_case in process $proc$sbox.v:12$166 in module sbox.
Marked 2 switch rules as full_case in process $proc$shiftrows.v:21$164 in module shiftrows.
Marked 1 switch rules as full_case in process $proc$xtime.v:14$201 in module xtime.
Marked 1 switch rules as full_case in process $proc$rcon.v:11$301 in module rcon.
Marked 8 switch rules as full_case in process $proc$aes.v:45$86 in module aes.
Marked 7 switch rules as full_case in process $proc$uart.v:105$64 in module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.
Removed 1 dead cases from process $proc$uart.v:33$36 in module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.
Marked 9 switch rules as full_case in process $proc$uart.v:33$36 in module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.
Marked 7 switch rules as full_case in process $proc$aes_module.v:27$5 in module aes_module.
Removed a total of 2 dead cases.

15.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 20 redundant assignments.
Promoted 104 assignments to connections.

15.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$560'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$556'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$549'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$545'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$538'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$535'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$532'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$529'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$526'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$524'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$522'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$518'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$511'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$507'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$500'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$497'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$494'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$491'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$488'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$486'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:31$85'.
  Set init value: \txstate = 2'00
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:30$84'.
  Set init value: \rxstate = 2'00
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:29$83'.
  Set init value: \txrdyout = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:28$82'.
  Set init value: \errout = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:27$81'.
  Set init value: \rxrdyout = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:26$80'.
  Set init value: \txpin = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:25$79'.
  Set init value: \rxdataout = 8'00000000
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:24$78'.
  Set init value: \txbitctr = 3'000
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:23$77'.
  Set init value: \rxbitctr = 3'000
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:22$76'.
  Set init value: \txctr = 16'0000000000000000
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:21$75'.
  Set init value: \rxctr = 16'0000000000000000

15.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$557'.
Found async reset \R in `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$546'.
Found async reset \S in `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$536'.
Found async reset \R in `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$530'.
Found async reset \S in `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$519'.
Found async reset \R in `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$508'.
Found async reset \S in `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$498'.
Found async reset \R in `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$492'.
Found async reset \rst in `\mixcolumns.$proc$mixcolumns.v:42$235'.
Found async reset \rst in `\aes.$proc$aes.v:45$86'.
Found async reset \rst in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
Found async reset \rst in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
Found async reset \rst in `\aes_module.$proc$aes_module.v:27$5'.

15.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 2 switches.
<suppressed ~53 debug messages>

15.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$560'.
Creating decoders for process `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$557'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$556'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$550'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$549'.
Creating decoders for process `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$546'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$545'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$539'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$538'.
Creating decoders for process `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$536'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$535'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$533'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$532'.
Creating decoders for process `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$530'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$529'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$527'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$526'.
Creating decoders for process `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$525'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$524'.
Creating decoders for process `\SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$523'.
Creating decoders for process `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$522'.
Creating decoders for process `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$519'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$518'.
Creating decoders for process `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$512'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$511'.
Creating decoders for process `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$508'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$507'.
Creating decoders for process `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$501'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$500'.
Creating decoders for process `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$498'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$497'.
Creating decoders for process `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$495'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$494'.
Creating decoders for process `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$492'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$491'.
Creating decoders for process `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$489'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$488'.
Creating decoders for process `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$487'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$486'.
Creating decoders for process `\SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$485'.
Creating decoders for process `\keysched.$proc$keysched.v:0$316'.
Creating decoders for process `\keysched.$proc$keysched.v:56$310'.
     1/17: $2\done[0:0]
     2/17: $2\next_key_out[127:0]
     3/17: $2\next_column3[31:0]
     4/17: $2\next_column2[31:0]
     5/17: $2\next_column1[31:0]
     6/17: $2\next_column0[31:0]
     7/17: $2\xor_word[31:0]
     8/17: $1\next_column3[31:0]
     9/17: $1\next_column2[31:0]
    10/17: $1\next_column1[31:0]
    11/17: $1\next_column0[31:0]
    12/17: $1\next_key_out[127:0]
    13/17: $1\xor_word[31:0]
    14/17: $1\sub_word[31:0]
    15/17: $1\done[0:0]
    16/17: $0\rot_word[31:0]
    17/17: $0\state[2:0]
Creating decoders for process `\subbytes.$proc$subbytes.v:0$200'.
Creating decoders for process `\subbytes.$proc$subbytes.v:31$199'.
     1/3: $0\done[0:0]
     2/3: $1\temp_state[127:0]
     3/3: $0\state_out[127:0]
Creating decoders for process `\mixcolumns.$proc$mixcolumns.v:0$284'.
Creating decoders for process `\mixcolumns.$proc$mixcolumns.v:42$235'.
     1/18: $0\done[0:0]
     2/18: $0\temp_state[127:0] [127:120]
     3/18: $0\temp_state[127:0] [119:112]
     4/18: $0\temp_state[127:0] [111:104]
     5/18: $0\temp_state[127:0] [103:96]
     6/18: $0\temp_state[127:0] [95:88]
     7/18: $0\temp_state[127:0] [87:80]
     8/18: $0\temp_state[127:0] [79:72]
     9/18: $0\temp_state[127:0] [71:64]
    10/18: $0\temp_state[127:0] [63:56]
    11/18: $0\temp_state[127:0] [55:48]
    12/18: $0\temp_state[127:0] [47:40]
    13/18: $0\temp_state[127:0] [39:32]
    14/18: $0\temp_state[127:0] [31:24]
    15/18: $0\temp_state[127:0] [23:16]
    16/18: $0\temp_state[127:0] [15:8]
    17/18: $0\temp_state[127:0] [7:0]
    18/18: $0\state_out[127:0]
Creating decoders for process `\sbox.$proc$sbox.v:12$166'.
     1/1: $0\byte_out[7:0]
Creating decoders for process `\shiftrows.$proc$shiftrows.v:21$164'.
     1/18: $1\temp_state[127:0] [127:120]
     2/18: $1\temp_state[127:0] [119:112]
     3/18: $1\temp_state[127:0] [87:80]
     4/18: $1\temp_state[127:0] [55:48]
     5/18: $1\temp_state[127:0] [23:16]
     6/18: $1\temp_state[127:0] [111:104]
     7/18: $1\temp_state[127:0] [79:72]
     8/18: $1\temp_state[127:0] [47:40]
     9/18: $1\temp_state[127:0] [15:8]
    10/18: $1\temp_state[127:0] [103:96]
    11/18: $1\temp_state[127:0] [31:24]
    12/18: $1\temp_state[127:0] [71:64]
    13/18: $1\temp_state[127:0] [95:88]
    14/18: $1\temp_state[127:0] [39:32]
    15/18: $1\temp_state[127:0] [63:56]
    16/18: $1\temp_state[127:0] [7:0]
    17/18: $1\done[0:0]
    18/18: $1\state_out[127:0]
Creating decoders for process `\xtime.$proc$xtime.v:14$201'.
     1/1: $0\byte_out[7:0]
Creating decoders for process `\rcon.$proc$rcon.v:11$301'.
     1/1: $0\rcon_out[31:0]
Creating decoders for process `\aes.$proc$aes.v:45$86'.
     1/9: $0\fsm_state[2:0]
     2/9: $0\keysched_ena[0:0]
     3/9: $0\mixcolumns_ena[0:0]
     4/9: $0\shiftrows_ena[0:0]
     5/9: $0\subbytes_ena[0:0]
     6/9: $0\round[3:0]
     7/9: $0\key[127:0]
     8/9: $0\aes_state[127:0]
     9/9: $0\done[0:0]
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:31$85'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:30$84'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:29$83'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:28$82'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:27$81'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:26$80'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:25$79'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:24$78'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:23$77'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:22$76'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:21$75'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
     1/5: $0\txctr[15:0]
     2/5: $0\txstate[1:0]
     3/5: $0\txbitctr[2:0]
     4/5: $0\txpin[0:0]
     5/5: $0\txrdyout[0:0]
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
     1/12: $4$lookahead\rxdataout$35[7:0]$50
     2/12: $3$bitselwrite$pos$uart.v:73$34[2:0]$49
     3/12: $0\rxstate[1:0]
     4/12: $3$lookahead\rxdataout$35[7:0]$44
     5/12: $2$lookahead\rxdataout$35[7:0]$42
     6/12: $0\rxctr[15:0]
     7/12: $2$bitselwrite$pos$uart.v:73$34[2:0]$41
     8/12: $1$lookahead\rxdataout$35[7:0]$40
     9/12: $1$bitselwrite$pos$uart.v:73$34[2:0]$39
    10/12: $0\rxbitctr[2:0]
    11/12: $0\errout[0:0]
    12/12: $0\rxrdyout[0:0]
Creating decoders for process `\aes_module.$proc$aes_module.v:27$5'.
     1/13: $4$lookahead\aes_din$4[127:0]$16
     2/13: $4$bitselwrite$pos$aes_module.v:45$3[31:0]$15
     3/13: $0\state[2:0]
     4/13: $3$lookahead\aes_din$4[127:0]$14
     5/13: $3$bitselwrite$pos$aes_module.v:45$3[31:0]$13
     6/13: $2$lookahead\aes_din$4[127:0]$11
     7/13: $2$bitselwrite$pos$aes_module.v:45$3[31:0]$10
     8/13: $1$lookahead\aes_din$4[127:0]$9
     9/13: $1$bitselwrite$pos$aes_module.v:45$3[31:0]$8
    10/13: $0\bytecount[5:0]
    11/13: $0\aes_rst[0:0]
    12/13: $0\uart_tx_enable[0:0]
    13/13: $0\uart_data_to_tx[7:0]
Creating decoders for process `\top_level.$proc$top_level.v:18$1'.

15.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\keysched.\sbox_out[0]' from process `\keysched.$proc$keysched.v:0$316'.
No latch inferred for signal `\keysched.\sbox_out[1]' from process `\keysched.$proc$keysched.v:0$316'.
No latch inferred for signal `\keysched.\sbox_out[2]' from process `\keysched.$proc$keysched.v:0$316'.
No latch inferred for signal `\keysched.\sbox_out[3]' from process `\keysched.$proc$keysched.v:0$316'.
No latch inferred for signal `\subbytes.\sbox_out[0]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[1]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[2]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[3]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[4]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[5]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[6]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[7]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[8]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[9]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[10]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[11]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[12]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[13]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[14]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\subbytes.\sbox_out[15]' from process `\subbytes.$proc$subbytes.v:0$200'.
No latch inferred for signal `\mixcolumns.\xtime_s[0]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[1]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[2]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[3]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[4]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[5]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[6]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[7]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[8]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[9]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[10]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[11]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[12]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[13]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[14]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\xtime_s[15]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[0]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[1]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[2]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[3]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[4]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[5]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[6]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[7]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[8]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[9]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[10]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[11]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[12]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[13]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[14]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\mixcolumns.\mul3_s[15]' from process `\mixcolumns.$proc$mixcolumns.v:0$284'.
No latch inferred for signal `\sbox.\byte_out' from process `\sbox.$proc$sbox.v:12$166'.
No latch inferred for signal `\xtime.\byte_out' from process `\xtime.$proc$xtime.v:14$201'.
No latch inferred for signal `\rcon.\rcon_out' from process `\rcon.$proc$rcon.v:11$301'.
No latch inferred for signal `\top_level.\counter' from process `\top_level.$proc$top_level.v:18$1'.

15.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$557'.
  created $adff cell `$procdff$1295' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$550'.
  created $dff cell `$procdff$1296' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$546'.
  created $adff cell `$procdff$1299' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$539'.
  created $dff cell `$procdff$1300' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$536'.
  created $adff cell `$procdff$1303' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$533'.
  created $dff cell `$procdff$1304' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$530'.
  created $adff cell `$procdff$1307' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$527'.
  created $dff cell `$procdff$1308' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$525'.
  created $dff cell `$procdff$1309' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$523'.
  created $dff cell `$procdff$1310' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$519'.
  created $adff cell `$procdff$1313' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$512'.
  created $dff cell `$procdff$1314' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$508'.
  created $adff cell `$procdff$1317' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$501'.
  created $dff cell `$procdff$1318' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$498'.
  created $adff cell `$procdff$1321' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$495'.
  created $dff cell `$procdff$1322' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$492'.
  created $adff cell `$procdff$1325' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$489'.
  created $dff cell `$procdff$1326' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$487'.
  created $dff cell `$procdff$1327' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$485'.
  created $dff cell `$procdff$1328' with positive edge clock.
Creating register for signal `\keysched.\state' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1329' with negative edge clock.
Creating register for signal `\keysched.\done' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1330' with negative edge clock.
Creating register for signal `\keysched.\next_key_out' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1331' with negative edge clock.
Creating register for signal `\keysched.\rot_word' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1332' with negative edge clock.
Creating register for signal `\keysched.\sub_word' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1333' with negative edge clock.
Creating register for signal `\keysched.\xor_word' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1334' with negative edge clock.
Creating register for signal `\keysched.\next_column0' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1335' with negative edge clock.
Creating register for signal `\keysched.\next_column1' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1336' with negative edge clock.
Creating register for signal `\keysched.\next_column2' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1337' with negative edge clock.
Creating register for signal `\keysched.\next_column3' using process `\keysched.$proc$keysched.v:56$310'.
  created $dff cell `$procdff$1338' with negative edge clock.
Creating register for signal `\subbytes.\done' using process `\subbytes.$proc$subbytes.v:31$199'.
  created $dff cell `$procdff$1339' with positive edge clock.
Creating register for signal `\subbytes.\state_out' using process `\subbytes.$proc$subbytes.v:31$199'.
  created $dff cell `$procdff$1340' with positive edge clock.
Creating register for signal `\subbytes.\temp_state' using process `\subbytes.$proc$subbytes.v:31$199'.
  created $dff cell `$procdff$1341' with positive edge clock.
Creating register for signal `\mixcolumns.\done' using process `\mixcolumns.$proc$mixcolumns.v:42$235'.
  created $adff cell `$procdff$1344' with positive edge clock and positive level reset.
Creating register for signal `\mixcolumns.\state_out' using process `\mixcolumns.$proc$mixcolumns.v:42$235'.
  created $adff cell `$procdff$1347' with positive edge clock and positive level reset.
Creating register for signal `\mixcolumns.\temp_state' using process `\mixcolumns.$proc$mixcolumns.v:42$235'.
  created $adff cell `$procdff$1350' with positive edge clock and positive level reset.
Creating register for signal `\shiftrows.\done' using process `\shiftrows.$proc$shiftrows.v:21$164'.
  created $dff cell `$procdff$1351' with positive edge clock.
Creating register for signal `\shiftrows.\state_out' using process `\shiftrows.$proc$shiftrows.v:21$164'.
  created $dff cell `$procdff$1352' with positive edge clock.
Creating register for signal `\shiftrows.\temp_state' using process `\shiftrows.$proc$shiftrows.v:21$164'.
  created $dff cell `$procdff$1353' with positive edge clock.
Creating register for signal `\aes.\done' using process `\aes.$proc$aes.v:45$86'.
  created $adff cell `$procdff$1356' with positive edge clock and positive level reset.
Creating register for signal `\aes.\fsm_state' using process `\aes.$proc$aes.v:45$86'.
  created $adff cell `$procdff$1359' with positive edge clock and positive level reset.
Creating register for signal `\aes.\aes_state' using process `\aes.$proc$aes.v:45$86'.
  created $adff cell `$procdff$1362' with positive edge clock and positive level reset.
Creating register for signal `\aes.\key' using process `\aes.$proc$aes.v:45$86'.
  created $dff cell `$procdff$1367' with positive edge clock.
Creating register for signal `\aes.\round' using process `\aes.$proc$aes.v:45$86'.
  created $adff cell `$procdff$1370' with positive edge clock and positive level reset.
Creating register for signal `\aes.\subbytes_ena' using process `\aes.$proc$aes.v:45$86'.
  created $adff cell `$procdff$1373' with positive edge clock and positive level reset.
Creating register for signal `\aes.\shiftrows_ena' using process `\aes.$proc$aes.v:45$86'.
  created $adff cell `$procdff$1376' with positive edge clock and positive level reset.
Creating register for signal `\aes.\mixcolumns_ena' using process `\aes.$proc$aes.v:45$86'.
  created $adff cell `$procdff$1379' with positive edge clock and positive level reset.
Creating register for signal `\aes.\keysched_ena' using process `\aes.$proc$aes.v:45$86'.
  created $adff cell `$procdff$1382' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\txrdyout' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
  created $adff cell `$procdff$1385' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\txpin' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
  created $adff cell `$procdff$1388' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\txctr' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
  created $adff cell `$procdff$1391' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\txbitctr' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
  created $adff cell `$procdff$1394' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\txstate' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
  created $adff cell `$procdff$1397' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\rxdataout' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
  created $dff cell `$procdff$1402' with positive edge clock.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\rxrdyout' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
  created $adff cell `$procdff$1405' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\errout' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
  created $adff cell `$procdff$1408' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\rxctr' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
  created $adff cell `$procdff$1411' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\rxbitctr' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
  created $adff cell `$procdff$1414' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.\rxstate' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
  created $adff cell `$procdff$1417' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$bitselwrite$pos$uart.v:73$34' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
  created $adff cell `$procdff$1420' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$lookahead\rxdataout$35' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
  created $adff cell `$procdff$1423' with positive edge clock and positive level reset.
Creating register for signal `\aes_module.\uart_data_to_tx' using process `\aes_module.$proc$aes_module.v:27$5'.
  created $adff cell `$procdff$1426' with positive edge clock and positive level reset.
Creating register for signal `\aes_module.\uart_tx_enable' using process `\aes_module.$proc$aes_module.v:27$5'.
  created $adff cell `$procdff$1429' with positive edge clock and positive level reset.
Creating register for signal `\aes_module.\state' using process `\aes_module.$proc$aes_module.v:27$5'.
  created $adff cell `$procdff$1432' with positive edge clock and positive level reset.
Creating register for signal `\aes_module.\aes_rst' using process `\aes_module.$proc$aes_module.v:27$5'.
  created $adff cell `$procdff$1435' with positive edge clock and positive level reset.
Creating register for signal `\aes_module.\aes_din' using process `\aes_module.$proc$aes_module.v:27$5'.
  created $dff cell `$procdff$1440' with positive edge clock.
Creating register for signal `\aes_module.\bytecount' using process `\aes_module.$proc$aes_module.v:27$5'.
  created $adff cell `$procdff$1443' with positive edge clock and positive level reset.
Creating register for signal `\aes_module.$bitselwrite$pos$aes_module.v:45$3' using process `\aes_module.$proc$aes_module.v:27$5'.
  created $adff cell `$procdff$1446' with positive edge clock and positive level reset.
Creating register for signal `\aes_module.$lookahead\aes_din$4' using process `\aes_module.$proc$aes_module.v:27$5'.
  created $adff cell `$procdff$1449' with positive edge clock and positive level reset.

15.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

15.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$560'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$557'.
Removing empty process `SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1414$557'.
Removing empty process `SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$556'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$550'.
Removing empty process `SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1353$550'.
Removing empty process `SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$549'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$546'.
Removing empty process `SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1273$546'.
Removing empty process `SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$545'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$539'.
Removing empty process `SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1212$539'.
Removing empty process `SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$538'.
Removing empty process `SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1138$536'.
Removing empty process `SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$535'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$533'.
Removing empty process `SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1088$533'.
Removing empty process `SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$532'.
Removing empty process `SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1017$530'.
Removing empty process `SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$529'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$527'.
Removing empty process `SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:967$527'.
Removing empty process `SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$526'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$525'.
Removing empty process `SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:922$525'.
Removing empty process `SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$524'.
Removing empty process `SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:882$523'.
Removing empty process `SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$522'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$519'.
Removing empty process `SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:803$519'.
Removing empty process `SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$518'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$512'.
Removing empty process `SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:742$512'.
Removing empty process `SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$511'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$508'.
Removing empty process `SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:662$508'.
Removing empty process `SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$507'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$501'.
Removing empty process `SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:601$501'.
Removing empty process `SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$500'.
Removing empty process `SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:527$498'.
Removing empty process `SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$497'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$495'.
Removing empty process `SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:477$495'.
Removing empty process `SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$494'.
Removing empty process `SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:406$492'.
Removing empty process `SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$491'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$489'.
Removing empty process `SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:356$489'.
Removing empty process `SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$488'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$487'.
Removing empty process `SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:311$487'.
Removing empty process `SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$486'.
Removing empty process `SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$485'.
Removing empty process `keysched.$proc$keysched.v:0$316'.
Found and cleaned up 2 empty switches in `\keysched.$proc$keysched.v:56$310'.
Removing empty process `keysched.$proc$keysched.v:56$310'.
Removing empty process `subbytes.$proc$subbytes.v:0$200'.
Found and cleaned up 2 empty switches in `\subbytes.$proc$subbytes.v:31$199'.
Removing empty process `subbytes.$proc$subbytes.v:31$199'.
Removing empty process `mixcolumns.$proc$mixcolumns.v:0$284'.
Found and cleaned up 1 empty switch in `\mixcolumns.$proc$mixcolumns.v:42$235'.
Removing empty process `mixcolumns.$proc$mixcolumns.v:42$235'.
Found and cleaned up 1 empty switch in `\sbox.$proc$sbox.v:12$166'.
Removing empty process `sbox.$proc$sbox.v:12$166'.
Found and cleaned up 2 empty switches in `\shiftrows.$proc$shiftrows.v:21$164'.
Removing empty process `shiftrows.$proc$shiftrows.v:21$164'.
Found and cleaned up 1 empty switch in `\xtime.$proc$xtime.v:14$201'.
Removing empty process `xtime.$proc$xtime.v:14$201'.
Found and cleaned up 1 empty switch in `\rcon.$proc$rcon.v:11$301'.
Removing empty process `rcon.$proc$rcon.v:11$301'.
Found and cleaned up 7 empty switches in `\aes.$proc$aes.v:45$86'.
Removing empty process `aes.$proc$aes.v:45$86'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:31$85'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:30$84'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:29$83'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:28$82'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:27$81'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:26$80'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:25$79'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:24$78'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:23$77'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:22$76'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:21$75'.
Found and cleaned up 6 empty switches in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:105$64'.
Found and cleaned up 8 empty switches in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.$proc$uart.v:33$36'.
Found and cleaned up 6 empty switches in `\aes_module.$proc$aes_module.v:27$5'.
Removing empty process `aes_module.$proc$aes_module.v:27$5'.
Removing empty process `top_level.$proc$top_level.v:18$1'.
Cleaned up 55 empty switches.

15.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module keysched.
Optimizing module subbytes.
Optimizing module mixcolumns.
<suppressed ~3 debug messages>
Optimizing module sbox.
Optimizing module shiftrows.
Optimizing module xtime.
<suppressed ~1 debug messages>
Optimizing module rcon.
Optimizing module aes.
<suppressed ~17 debug messages>
Optimizing module clkgen48.
Optimizing module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.
<suppressed ~31 debug messages>
Optimizing module aes_module.
<suppressed ~18 debug messages>
Optimizing module top_level.

15.4. Executing FLATTEN pass (flatten design).
Deleting now unused module keysched.
Deleting now unused module subbytes.
Deleting now unused module mixcolumns.
Deleting now unused module sbox.
Deleting now unused module shiftrows.
Deleting now unused module xtime.
Deleting now unused module rcon.
Deleting now unused module aes.
Deleting now unused module clkgen48.
Deleting now unused module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000001111101011.
Deleting now unused module aes_module.
<suppressed ~45 debug messages>

15.5. Executing TRIBUF pass.

15.6. Executing DEMINOUT pass (demote inout ports to input or output).

15.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~7 debug messages>

15.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 73 unused cells and 587 unused wires.
<suppressed ~91 debug messages>

15.9. Executing CHECK pass (checking for obvious problems).
Checking module top_level...
Warning: Wire top_level.\LED [7] is used but has no driver.
Warning: Wire top_level.\LED [6] is used but has no driver.
Warning: Wire top_level.\LED [5] is used but has no driver.
Warning: Wire top_level.\LED [4] is used but has no driver.
Warning: Wire top_level.\LED [3] is used but has no driver.
Warning: Wire top_level.\LED [2] is used but has no driver.
Warning: Wire top_level.\LED [1] is used but has no driver.
Warning: Wire top_level.\LED [0] is used but has no driver.
Found and reported 8 problems.

15.10. Executing OPT pass (performing simple optimizations).

15.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~234 debug messages>
Removed a total of 78 cells.

15.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\aes_module_inst.$procmux$1181.
    dead port 2/2 on $mux $flatten\aes_module_inst.$procmux$1183.
    dead port 2/2 on $mux $flatten\aes_module_inst.$procmux$1220.
    dead port 1/2 on $mux $flatten\aes_module_inst.\aes_inst.\keysched_inst.$procmux$753.
    dead port 1/2 on $mux $flatten\aes_module_inst.\aes_inst.\keysched_inst.$procmux$759.
    dead port 2/2 on $mux $flatten\uart_inst.$procmux$1084.
    dead port 2/2 on $mux $flatten\uart_inst.$procmux$1121.
Removed 7 multiplexer ports.
<suppressed ~49 debug messages>

15.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
    New ctrl vector for $pmux cell $flatten\aes_module_inst.\aes_inst.$procmux$981: { $flatten\aes_module_inst.\aes_inst.$procmux$1014_CMP $auto$opt_reduce.cc:137:opt_pmux$1500 $flatten\aes_module_inst.\aes_inst.$procmux$1000_CMP }
    New ctrl vector for $pmux cell $flatten\aes_module_inst.$procmux$1262: { $flatten\aes_module_inst.$procmux$1184_CMP $auto$opt_reduce.cc:137:opt_pmux$1502 }
    New ctrl vector for $pmux cell $flatten\aes_module_inst.\aes_inst.$procmux$998: { $flatten\aes_module_inst.\aes_inst.$procmux$1014_CMP $flatten\aes_module_inst.\aes_inst.$procmux$1013_CMP $flatten\aes_module_inst.\aes_inst.$procmux$1009_CMP $flatten\aes_module_inst.\aes_inst.$procmux$1005_CMP $flatten\aes_module_inst.\aes_inst.$procmux$1000_CMP $auto$opt_reduce.cc:137:opt_pmux$1504 }
    New ctrl vector for $pmux cell $flatten\aes_module_inst.$procmux$1280: { $auto$opt_reduce.cc:137:opt_pmux$1506 $flatten\aes_module_inst.$procmux$1203_CMP }
    New ctrl vector for $pmux cell $flatten\aes_module_inst.\aes_inst.$procmux$1016: { $auto$opt_reduce.cc:137:opt_pmux$1508 $flatten\aes_module_inst.\aes_inst.$procmux$1017_CMP }
    New ctrl vector for $pmux cell $flatten\uart_inst.$procmux$1123: { $flatten\uart_inst.$procmux$1114_CMP $flatten\uart_inst.$procmux$1085_CMP $auto$opt_reduce.cc:137:opt_pmux$1510 }
  Optimizing cells in module \top_level.
Performed a total of 6 changes.

15.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

15.10.6. Executing OPT_DFF pass (perform DFF optimizations).

15.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 90 unused wires.
<suppressed ~3 debug messages>

15.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.10.9. Rerunning OPT passes. (Maybe there is more to do..)

15.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

15.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
    New ctrl vector for $pmux cell $flatten\uart_inst.$procmux$1026: { $flatten\uart_inst.$procmux$1036_CMP $auto$opt_reduce.cc:137:opt_pmux$1512 }
    New ctrl vector for $pmux cell $flatten\uart_inst.$procmux$1131: { $flatten\uart_inst.$procmux$1114_CMP $flatten\uart_inst.$procmux$1110_CMP $auto$opt_reduce.cc:137:opt_pmux$1514 }
  Optimizing cells in module \top_level.
Performed a total of 2 changes.

15.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.10.13. Executing OPT_DFF pass (perform DFF optimizations).

15.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.10.16. Rerunning OPT passes. (Maybe there is more to do..)

15.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

15.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

15.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.10.20. Executing OPT_DFF pass (perform DFF optimizations).

15.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.10.23. Finished OPT passes. (There is nothing left to do.)

15.11. Executing FSM pass (extract and optimize FSM).

15.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top_level.aes_module_inst.aes_inst.fsm_state as FSM state register:
    Circuit seems to be self-resetting.
Not marking top_level.aes_module_inst.state as FSM state register:
    Circuit seems to be self-resetting.
Not marking top_level.uart_inst.rxstate as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking top_level.uart_inst.txstate as FSM state register:
    Register has an initialization value.

15.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

15.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

15.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

15.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

15.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

15.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

15.12. Executing OPT pass (performing simple optimizations).

15.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

15.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

15.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uart_inst.$procdff$1414 ($adff) from module top_level (D = $flatten\uart_inst.$0\rxbitctr[2:0], Q = \uart_inst.rxbitctr).
Adding EN signal on $flatten\uart_inst.$procdff$1405 ($adff) from module top_level (D = $flatten\uart_inst.$0\rxrdyout[0:0], Q = \uart_inst.rxrdyout).
Adding EN signal on $flatten\uart_inst.$procdff$1402 ($dff) from module top_level (D = $flatten\uart_inst.$0$lookahead\rxdataout$35[7:0]$38, Q = \uart_inst.rxdataout).
Adding EN signal on $flatten\uart_inst.$procdff$1397 ($adff) from module top_level (D = $flatten\uart_inst.$0\txstate[1:0], Q = \uart_inst.txstate).
Adding EN signal on $flatten\uart_inst.$procdff$1394 ($adff) from module top_level (D = $flatten\uart_inst.$0\txbitctr[2:0], Q = \uart_inst.txbitctr).
Adding EN signal on $flatten\uart_inst.$procdff$1388 ($adff) from module top_level (D = $flatten\uart_inst.$0\txpin[0:0], Q = \uart_inst.txpin).
Adding EN signal on $flatten\uart_inst.$procdff$1385 ($adff) from module top_level (D = $flatten\uart_inst.$0\txrdyout[0:0], Q = \uart_inst.txrdyout).
Adding SRST signal on $flatten\aes_module_inst.\aes_inst.\subbytes_inst.$procdff$1340 ($dff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.\subbytes_inst.$procmux$831_Y, Q = \aes_module_inst.aes_inst.subbytes_inst.state_out, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$1570 ($sdff) from module top_level (D = { \aes_module_inst.aes_inst.subbytes_inst.sbox_out[0] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[1] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[2] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[3] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[4] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[5] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[6] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[7] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[8] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[9] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[10] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[11] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[12] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[13] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[14] \aes_module_inst.aes_inst.subbytes_inst.sbox_out[15] }, Q = \aes_module_inst.aes_inst.subbytes_inst.state_out).
Adding SRST signal on $flatten\aes_module_inst.\aes_inst.\subbytes_inst.$procdff$1339 ($dff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.\subbytes_inst.$procmux$822_Y, Q = \aes_module_inst.aes_inst.subbytes_inst.done, rval = 1'0).
Adding SRST signal on $flatten\aes_module_inst.\aes_inst.\shiftrows_inst.$procdff$1352 ($dff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.\shiftrows_inst.$procmux$898_Y, Q = \aes_module_inst.aes_inst.shiftrows_inst.state_out, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$1573 ($sdff) from module top_level (D = { \aes_module_inst.aes_inst.aes_state [95:88] \aes_module_inst.aes_inst.aes_state [55:48] \aes_module_inst.aes_inst.aes_state [15:8] \aes_module_inst.aes_inst.aes_state [103:96] \aes_module_inst.aes_inst.aes_state [63:56] \aes_module_inst.aes_inst.aes_state [23:16] \aes_module_inst.aes_inst.aes_state [111:104] \aes_module_inst.aes_inst.aes_state [71:64] \aes_module_inst.aes_inst.aes_state [31:24] \aes_module_inst.aes_inst.aes_state [119:112] \aes_module_inst.aes_inst.aes_state [79:72] \aes_module_inst.aes_inst.aes_state [39:32] \aes_module_inst.aes_inst.aes_state [127:120] \aes_module_inst.aes_inst.aes_state [87:80] \aes_module_inst.aes_inst.aes_state [47:40] \aes_module_inst.aes_inst.aes_state [7:0] }, Q = \aes_module_inst.aes_inst.shiftrows_inst.state_out).
Adding SRST signal on $flatten\aes_module_inst.\aes_inst.\shiftrows_inst.$procdff$1351 ($dff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.\shiftrows_inst.$procmux$892_Y, Q = \aes_module_inst.aes_inst.shiftrows_inst.done, rval = 1'0).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.$procdff$1347 ($adff) from module top_level (D = \aes_module_inst.aes_inst.mixcolumns_inst.temp_state, Q = \aes_module_inst.aes_inst.mixcolumns_inst.state_out).
Adding SRST signal on $flatten\aes_module_inst.\aes_inst.\keysched_inst.$procdff$1331 ($dff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.\keysched_inst.$2\next_key_out[127:0], Q = \aes_module_inst.aes_inst.keysched_inst.next_key_out, rval = 128'00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$ff.cc:266:slice$1577 ($sdff) from module top_level (D = { $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:79$315_Y [7:0] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:79$315_Y [15:8] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:79$315_Y [23:16] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:79$315_Y [31:24] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:78$314_Y [7:0] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:78$314_Y [15:8] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:78$314_Y [23:16] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:78$314_Y [31:24] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:77$313_Y [7:0] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:77$313_Y [15:8] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:77$313_Y [23:16] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:77$313_Y [31:24] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:76$312_Y [7:0] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:76$312_Y [15:8] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:76$312_Y [23:16] $flatten\aes_module_inst.\aes_inst.\keysched_inst.$xor$keysched.v:76$312_Y [31:24] }, Q = \aes_module_inst.aes_inst.keysched_inst.next_key_out).
Adding SRST signal on $flatten\aes_module_inst.\aes_inst.\keysched_inst.$procdff$1330 ($dff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.\keysched_inst.$2\done[0:0], Q = \aes_module_inst.aes_inst.keysched_inst.done, rval = 1'0).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.$procdff$1382 ($adff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$0\keysched_ena[0:0], Q = \aes_module_inst.aes_inst.keysched_ena).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.$procdff$1379 ($adff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$0\mixcolumns_ena[0:0], Q = \aes_module_inst.aes_inst.mixcolumns_ena).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.$procdff$1376 ($adff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$0\shiftrows_ena[0:0], Q = \aes_module_inst.aes_inst.shiftrows_ena).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.$procdff$1373 ($adff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$0\subbytes_ena[0:0], Q = \aes_module_inst.aes_inst.subbytes_ena).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.$procdff$1370 ($adff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$0\round[3:0], Q = \aes_module_inst.aes_inst.round).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.$procdff$1367 ($dff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$0\key[127:0], Q = \aes_module_inst.aes_inst.key).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.$procdff$1362 ($adff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$0\aes_state[127:0], Q = \aes_module_inst.aes_inst.aes_state).
Adding EN signal on $flatten\aes_module_inst.\aes_inst.$procdff$1356 ($adff) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$0\done[0:0], Q = \aes_module_inst.aes_inst.done).
Adding EN signal on $flatten\aes_module_inst.$procdff$1443 ($adff) from module top_level (D = $flatten\aes_module_inst.$0\bytecount[5:0], Q = \aes_module_inst.bytecount).
Adding EN signal on $flatten\aes_module_inst.$procdff$1440 ($dff) from module top_level (D = $flatten\aes_module_inst.$or$aes_module.v:0$25_Y, Q = \aes_module_inst.aes_din).
Adding EN signal on $flatten\aes_module_inst.$procdff$1435 ($adff) from module top_level (D = $flatten\aes_module_inst.$0\aes_rst[0:0], Q = \aes_module_inst.aes_rst).
Adding EN signal on $flatten\aes_module_inst.$procdff$1429 ($adff) from module top_level (D = $flatten\aes_module_inst.$0\uart_tx_enable[0:0], Q = \aes_module_inst.uart_tx_enable).
Adding EN signal on $flatten\aes_module_inst.$procdff$1426 ($adff) from module top_level (D = $flatten\aes_module_inst.$shiftx$aes_module.v:0$32_Y, Q = \aes_module_inst.uart_data_to_tx).

15.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 19 unused cells and 19 unused wires.
<suppressed ~20 debug messages>

15.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~20 debug messages>

15.12.9. Rerunning OPT passes. (Maybe there is more to do..)

15.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

15.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
    New ctrl vector for $pmux cell $flatten\uart_inst.$procmux$1123: { $flatten\uart_inst.$procmux$1114_CMP $flatten\uart_inst.$procmux$1085_CMP }
  Optimizing cells in module \top_level.
Performed a total of 1 changes.

15.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

15.12.13. Executing OPT_DFF pass (perform DFF optimizations).

15.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 2 unused cells and 8 unused wires.
<suppressed ~3 debug messages>

15.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.12.16. Rerunning OPT passes. (Maybe there is more to do..)

15.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

15.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

15.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.12.20. Executing OPT_DFF pass (perform DFF optimizations).

15.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.12.23. Finished OPT passes. (There is nothing left to do.)

15.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$mem.cc:328:emit$704 ($flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst0.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst0.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst1.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst1.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst2.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst2.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst3.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst3.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[0].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[0].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[10].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[10].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[11].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[11].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[12].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[12].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[13].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[13].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[14].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[14].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[15].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[15].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[1].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[1].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[2].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[2].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[3].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[3].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[4].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[4].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[5].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[5].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[6].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[6].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[7].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[7].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[8].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[8].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 24 address bits (of 32) from memory init port top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[9].sbox_instance.$auto$mem.cc:328:emit$700 ($flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[9].sbox_instance.$auto$proc_rom.cc:155:do_switch$698).
Removed top 1 bits (of 3) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1624 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1614 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1612 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1610 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1603 ($ne).
Removed top 1 bits (of 2) from mux cell top_level.$flatten\uart_inst.$procmux$1112 ($mux).
Removed top 1 bits (of 2) from port B of cell top_level.$flatten\uart_inst.$procmux$1110_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell top_level.$flatten\uart_inst.$procmux$1099 ($mux).
Removed top 1 bits (of 2) from mux cell top_level.$flatten\uart_inst.$procmux$1054 ($mux).
Removed top 1 bits (of 2) from mux cell top_level.$flatten\uart_inst.$procmux$1044 ($mux).
Removed top 1 bits (of 2) from port B of cell top_level.$flatten\uart_inst.$procmux$1035_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1628 ($ne).
Removed top 6 bits (of 16) from port B of cell top_level.$flatten\uart_inst.$eq$uart.v:129$66 ($eq).
Converting cell top_level.$flatten\uart_inst.$neg$uart.v:0$51 ($neg) from signed to unsigned.
Removed top 1 bits (of 4) from port A of cell top_level.$flatten\uart_inst.$neg$uart.v:0$51 ($neg).
Removed top 6 bits (of 16) from port B of cell top_level.$flatten\uart_inst.$eq$uart.v:71$48 ($eq).
Removed top 7 bits (of 16) from port B of cell top_level.$flatten\uart_inst.$eq$uart.v:57$45 ($eq).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1546 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1548 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1550 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1528 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:195:make_patterns_logic$1519 ($ne).
Removed top 2 bits (of 3) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.$procmux$915 ($mux).
Removed top 1 bits (of 3) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.$procmux$930 ($mux).
Removed top 1 bits (of 3) from port B of cell top_level.$flatten\aes_module_inst.\aes_inst.$procmux$1005_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top_level.$flatten\aes_module_inst.\aes_inst.$procmux$1009_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top_level.$flatten\aes_module_inst.\aes_inst.$procmux$1013_CMP0 ($eq).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[15].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[14].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[13].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[12].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[11].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[10].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[9].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[8].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[7].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[6].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[5].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[4].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[3].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[2].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[1].xtime_inst.$procmux$904 ($mux).
Removed top 3 bits (of 8) from mux cell top_level.$flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[0].xtime_inst.$procmux$904 ($mux).
Removed top 2 bits (of 3) from mux cell top_level.$flatten\aes_module_inst.$procmux$1211 ($mux).
Removed top 2 bits (of 3) from port B of cell top_level.$flatten\aes_module_inst.$procmux$1207_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell top_level.$flatten\aes_module_inst.$procmux$1205 ($mux).
Removed top 1 bits (of 3) from port B of cell top_level.$flatten\aes_module_inst.$procmux$1203_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell top_level.$flatten\aes_module_inst.$procmux$1200 ($mux).
Removed top 22 bits (of 32) from port B of cell top_level.$flatten\aes_module_inst.$shiftx$aes_module.v:0$32 ($shiftx).
Removed top 23 bits (of 33) from port A of cell top_level.$flatten\aes_module_inst.$neg$aes_module.v:0$19 ($neg).
Converting cell top_level.$flatten\aes_module_inst.$neg$aes_module.v:0$19 ($neg) from signed to unsigned.
Removed top 1 bits (of 10) from port A of cell top_level.$flatten\aes_module_inst.$neg$aes_module.v:0$19 ($neg).
Removed top 1 bits (of 6) from port B of cell top_level.$flatten\aes_module_inst.$eq$aes_module.v:37$12 ($eq).
Removed top 1 bits (of 3) from wire top_level.$flatten\aes_module_inst.$procmux$1200_Y.
Removed top 1 bits (of 3) from wire top_level.$flatten\aes_module_inst.$procmux$1205_Y.
Removed top 2 bits (of 3) from wire top_level.$flatten\aes_module_inst.$procmux$1211_Y.
Removed top 2 bits (of 3) from wire top_level.$flatten\aes_module_inst.\aes_inst.$procmux$915_Y.
Removed top 1 bits (of 3) from wire top_level.$flatten\aes_module_inst.\aes_inst.$procmux$930_Y.
Removed top 1 bits (of 2) from wire top_level.$flatten\uart_inst.$procmux$1044_Y.
Removed top 1 bits (of 2) from wire top_level.$flatten\uart_inst.$procmux$1054_Y.
Removed top 1 bits (of 2) from wire top_level.$flatten\uart_inst.$procmux$1099_Y.
Removed top 1 bits (of 2) from wire top_level.$flatten\uart_inst.$procmux$1112_Y.

15.14. Executing PEEPOPT pass (run peephole optimizers).

15.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

15.16. Executing SHARE pass (SAT-based resource sharing).

15.17. Executing TECHMAP pass (map to technology primitives).

15.17.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

15.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

15.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top_level:
  creating $macc model for $flatten\aes_module_inst.$add$aes_module.v:46$26 ($add).
  creating $macc model for $flatten\aes_module_inst.$neg$aes_module.v:0$19 ($neg).
  creating $macc model for $flatten\aes_module_inst.\aes_inst.$add$aes.v:125$91 ($add).
  creating $macc model for $flatten\uart_inst.$add$uart.v:133$67 ($add).
  creating $macc model for $flatten\uart_inst.$add$uart.v:145$71 ($add).
  creating $macc model for $flatten\uart_inst.$add$uart.v:65$47 ($add).
  creating $macc model for $flatten\uart_inst.$add$uart.v:78$59 ($add).
  creating $macc model for $flatten\uart_inst.$neg$uart.v:0$51 ($neg).
  creating $alu model for $macc $flatten\uart_inst.$neg$uart.v:0$51.
  creating $alu model for $macc $flatten\uart_inst.$add$uart.v:78$59.
  creating $alu model for $macc $flatten\uart_inst.$add$uart.v:65$47.
  creating $alu model for $macc $flatten\uart_inst.$add$uart.v:145$71.
  creating $alu model for $macc $flatten\uart_inst.$add$uart.v:133$67.
  creating $alu model for $macc $flatten\aes_module_inst.\aes_inst.$add$aes.v:125$91.
  creating $alu model for $macc $flatten\aes_module_inst.$neg$aes_module.v:0$19.
  creating $alu model for $macc $flatten\aes_module_inst.$add$aes_module.v:46$26.
  creating $alu cell for $flatten\aes_module_inst.$add$aes_module.v:46$26: $auto$alumacc.cc:485:replace_alu$1659
  creating $alu cell for $flatten\aes_module_inst.$neg$aes_module.v:0$19: $auto$alumacc.cc:485:replace_alu$1662
  creating $alu cell for $flatten\aes_module_inst.\aes_inst.$add$aes.v:125$91: $auto$alumacc.cc:485:replace_alu$1665
  creating $alu cell for $flatten\uart_inst.$add$uart.v:133$67: $auto$alumacc.cc:485:replace_alu$1668
  creating $alu cell for $flatten\uart_inst.$add$uart.v:145$71: $auto$alumacc.cc:485:replace_alu$1671
  creating $alu cell for $flatten\uart_inst.$add$uart.v:65$47: $auto$alumacc.cc:485:replace_alu$1674
  creating $alu cell for $flatten\uart_inst.$add$uart.v:78$59: $auto$alumacc.cc:485:replace_alu$1677
  creating $alu cell for $flatten\uart_inst.$neg$uart.v:0$51: $auto$alumacc.cc:485:replace_alu$1680
  created 8 $alu and 0 $macc cells.

15.21. Executing OPT pass (performing simple optimizations).

15.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~43 debug messages>

15.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

15.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.21.6. Executing OPT_DFF pass (perform DFF optimizations).

15.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.21.9. Finished OPT passes. (There is nothing left to do.)

15.22. Executing MEMORY pass.

15.22.1. Executing OPT_MEM pass (optimize memories).
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 0
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 1
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 2
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 3
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 4
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 5
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 6
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 7
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 8
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 9
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 10
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 11
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 12
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 13
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 14
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 15
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 16
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 17
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 18
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 19
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 20
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 21
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 22
top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702: removing const-0 lane 23
Performed a total of 1 transformations.

15.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

15.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

15.22.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

15.22.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking read port `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702'[0] in module `\top_level': no output FF found.
Checking read port `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst0.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': no output FF found.
Checking read port `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst1.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': no output FF found.
Checking read port `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst2.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': no output FF found.
Checking read port `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst3.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': no output FF found.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[0].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[10].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[11].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[12].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[13].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[14].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[15].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[1].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[2].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[3].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[4].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[5].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[6].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[7].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[8].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port `$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[9].sbox_instance.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merging output FF to cell.
Checking read port address `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702'[0] in module `\top_level': address FF has async set and/or reset, not supported.
Checking read port address `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst0.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merged address FF to cell.
Checking read port address `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst1.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merged address FF to cell.
Checking read port address `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst2.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merged address FF to cell.
Checking read port address `$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst3.$auto$proc_rom.cc:155:do_switch$698'[0] in module `\top_level': merged address FF to cell.

15.22.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 1 unused cells and 160 unused wires.
<suppressed ~34 debug messages>

15.22.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

15.22.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

15.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.22.10. Executing MEMORY_COLLECT pass (generating $mem cells).

15.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.24. Executing MEMORY_LIBMAP pass (mapping memories to cells).
using FF mapping for memory top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst0.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst1.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst2.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\keysched_inst.\sbox_inst3.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[0].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[10].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[11].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[12].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[13].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[14].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[15].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[1].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[2].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[3].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[4].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[5].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[6].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[7].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[8].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
mapping memory top_level.$flatten\aes_module_inst.\aes_inst.\subbytes_inst.\sbox_gen[9].sbox_instance.$auto$proc_rom.cc:155:do_switch$698 via $__ICE40_RAM4K_
<suppressed ~1102 debug messages>

15.25. Executing TECHMAP pass (map to technology primitives).

15.25.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K_'.
Successfully finished Verilog frontend.

15.25.2. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/spram_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_SPRAM_'.
Successfully finished Verilog frontend.

15.25.3. Continuing TECHMAP pass.
Using template $paramod$18dae5875ab6982fd87b1c6acef64e49b7d0c19f\$__ICE40_RAM4K_ for cells of type $__ICE40_RAM4K_.
No more expansions possible.
<suppressed ~45 debug messages>

15.26. Executing ICE40_BRAMINIT pass.

15.27. Executing OPT pass (performing simple optimizations).

15.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~365 debug messages>

15.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~48 debug messages>
Removed a total of 16 cells.

15.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:266:slice$1531 ($dffe) from module top_level (D = $flatten\uart_inst.$4$lookahead\rxdataout$35[7:0]$50, Q = \uart_inst.rxdataout, rval = 8'00000000).
Adding SRST signal on $auto$ff.cc:266:slice$1599 ($dffe) from module top_level (D = $flatten\aes_module_inst.\aes_inst.$procmux$992_Y [95:0], Q = \aes_module_inst.aes_inst.key [95:0], rval = 96'100010000001010111110111101010111010011011010010101011100010100000010110000101010111111000101011).

15.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 1 unused cells and 359 unused wires.
<suppressed ~2 debug messages>

15.27.5. Rerunning OPT passes. (Removed registers in this run.)

15.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~1 debug messages>

15.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.27.8. Executing OPT_DFF pass (perform DFF optimizations).

15.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

15.27.10. Finished fast OPT passes.

15.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).
Mapping memory $flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702 in module \top_level:
  created 16 $dff cells and 0 static cells of width 8.
  read interface: 0 $dff and 15 $mux cells.
  write interface: 0 write mux blocks.

15.29. Executing OPT pass (performing simple optimizations).

15.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~3 debug messages>

15.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

15.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][3][3]$2087:
      Old ports: A=8'00100000, B=8'01000000, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$b$2071
      New ports: A=2'01, B=2'10, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$b$2071 [6:5]
      New connections: { $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$b$2071 [7] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$b$2071 [4:0] } = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][3][2]$2084:
      Old ports: A=8'00001000, B=8'00010000, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$a$2070
      New ports: A=2'01, B=2'10, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$a$2070 [4:3]
      New connections: { $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$a$2070 [7:5] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$a$2070 [2:0] } = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][3][1]$2081:
      Old ports: A=8'00000010, B=8'00000100, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$b$2068
      New ports: A=2'01, B=2'10, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$b$2068 [2:1]
      New connections: { $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$b$2068 [7:3] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$b$2068 [0] } = 6'000000
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][3][0]$2078:
      Old ports: A=8'00000000, B=8'00000001, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$a$2067
      New ports: A=1'0, B=1'1, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$a$2067 [0]
      New connections: $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$a$2067 [7:1] = 7'0000000
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][3][4]$2090:
      Old ports: A=8'10000000, B=8'00011011, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073
      New ports: A=2'10, B=2'01, Y={ $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [7] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [0] }
      New connections: $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [6:1] = { 2'00 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [0] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [0] 1'0 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [0] }
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.$procmux$1200:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:461:run$1649 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:461:run$1649 [1]
      New connections: $auto$wreduce.cc:461:run$1649 [0] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\aes_module_inst.$procmux$1202:
      Old ports: A=3'000, B={ 2'00 $auto$wreduce.cc:461:run$1651 [0] 1'0 $auto$wreduce.cc:461:run$1650 [1:0] 1'0 $auto$wreduce.cc:461:run$1649 [1:0] }, Y=$flatten\aes_module_inst.$0\state[2:0]
      New ports: A=2'00, B={ 1'0 $auto$wreduce.cc:461:run$1651 [0] $auto$wreduce.cc:461:run$1650 [1:0] $auto$wreduce.cc:461:run$1649 [1:0] }, Y=$flatten\aes_module_inst.$0\state[2:0] [1:0]
      New connections: $flatten\aes_module_inst.$0\state[2:0] [2] = 1'0
    New ctrl vector for $pmux cell $flatten\aes_module_inst.$procmux$1247: $auto$opt_reduce.cc:137:opt_pmux$2103
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.$procmux$911:
      Old ports: A=3'001, B=3'110, Y=$flatten\aes_module_inst.\aes_inst.$procmux$911_Y
      New ports: A=2'01, B=2'10, Y=$flatten\aes_module_inst.\aes_inst.$procmux$911_Y [1:0]
      New connections: $flatten\aes_module_inst.\aes_inst.$procmux$911_Y [2] = $flatten\aes_module_inst.\aes_inst.$procmux$911_Y [1]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.$procmux$919:
      Old ports: A=3'011, B=3'100, Y=$flatten\aes_module_inst.\aes_inst.$procmux$919_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\aes_module_inst.\aes_inst.$procmux$919_Y [2] $flatten\aes_module_inst.\aes_inst.$procmux$919_Y [0] }
      New connections: $flatten\aes_module_inst.\aes_inst.$procmux$919_Y [1] = $flatten\aes_module_inst.\aes_inst.$procmux$919_Y [0]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.$procmux$924:
      Old ports: A=3'100, B=3'011, Y=$flatten\aes_module_inst.\aes_inst.$procmux$924_Y
      New ports: A=2'10, B=2'01, Y={ $flatten\aes_module_inst.\aes_inst.$procmux$924_Y [2] $flatten\aes_module_inst.\aes_inst.$procmux$924_Y [0] }
      New connections: $flatten\aes_module_inst.\aes_inst.$procmux$924_Y [1] = $flatten\aes_module_inst.\aes_inst.$procmux$924_Y [0]
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][3][5]$2093:
      Old ports: A=8'00110110, B=8'00000000, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074
      New ports: A=1'1, B=1'0, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074 [1]
      New connections: { $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074 [7:2] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074 [0] } = { 2'00 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074 [1] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074 [1] 1'0 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[0].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [3:0] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1987 [2:1] \aes_module_inst.aes_inst.aes_state [1] $auto$opt_expr.cc:205:group_cell_inputs$1987 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[0] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [3:2] \aes_module_inst.aes_inst.aes_state [0] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1987 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[0] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[0] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[0] [2] = \aes_module_inst.aes_inst.aes_state [1]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[10].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [83:80] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2015 [2:1] \aes_module_inst.aes_inst.aes_state [81] $auto$opt_expr.cc:205:group_cell_inputs$2015 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[10] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [83:82] \aes_module_inst.aes_inst.aes_state [80] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2015 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[10] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[10] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[10] [2] = \aes_module_inst.aes_inst.aes_state [81]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[11].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [91:88] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2011 [2:1] \aes_module_inst.aes_inst.aes_state [89] $auto$opt_expr.cc:205:group_cell_inputs$2011 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[11] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [91:90] \aes_module_inst.aes_inst.aes_state [88] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2011 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[11] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[11] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[11] [2] = \aes_module_inst.aes_inst.aes_state [89]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[12].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [99:96] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2007 [2:1] \aes_module_inst.aes_inst.aes_state [97] $auto$opt_expr.cc:205:group_cell_inputs$2007 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[12] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [99:98] \aes_module_inst.aes_inst.aes_state [96] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2007 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[12] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[12] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[12] [2] = \aes_module_inst.aes_inst.aes_state [97]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[13].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [107:104] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2003 [2:1] \aes_module_inst.aes_inst.aes_state [105] $auto$opt_expr.cc:205:group_cell_inputs$2003 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[13] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [107:106] \aes_module_inst.aes_inst.aes_state [104] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2003 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[13] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[13] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[13] [2] = \aes_module_inst.aes_inst.aes_state [105]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[14].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [115:112] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1999 [2:1] \aes_module_inst.aes_inst.aes_state [113] $auto$opt_expr.cc:205:group_cell_inputs$1999 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[14] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [115:114] \aes_module_inst.aes_inst.aes_state [112] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1999 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[14] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[14] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[14] [2] = \aes_module_inst.aes_inst.aes_state [113]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[15].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [123:120] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1995 [2:1] \aes_module_inst.aes_inst.aes_state [121] $auto$opt_expr.cc:205:group_cell_inputs$1995 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[15] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [123:122] \aes_module_inst.aes_inst.aes_state [120] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1995 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[15] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[15] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[15] [2] = \aes_module_inst.aes_inst.aes_state [121]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[1].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [11:8] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1991 [2:1] \aes_module_inst.aes_inst.aes_state [9] $auto$opt_expr.cc:205:group_cell_inputs$1991 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[1] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [11:10] \aes_module_inst.aes_inst.aes_state [8] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1991 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[1] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[1] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[1] [2] = \aes_module_inst.aes_inst.aes_state [9]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[2].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [19:16] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2047 [2:1] \aes_module_inst.aes_inst.aes_state [17] $auto$opt_expr.cc:205:group_cell_inputs$2047 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[2] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [19:18] \aes_module_inst.aes_inst.aes_state [16] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2047 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[2] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[2] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[2] [2] = \aes_module_inst.aes_inst.aes_state [17]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[3].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [27:24] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2043 [2:1] \aes_module_inst.aes_inst.aes_state [25] $auto$opt_expr.cc:205:group_cell_inputs$2043 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[3] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [27:26] \aes_module_inst.aes_inst.aes_state [24] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2043 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[3] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[3] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[3] [2] = \aes_module_inst.aes_inst.aes_state [25]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[4].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [35:32] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2039 [2:1] \aes_module_inst.aes_inst.aes_state [33] $auto$opt_expr.cc:205:group_cell_inputs$2039 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[4] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [35:34] \aes_module_inst.aes_inst.aes_state [32] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2039 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[4] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[4] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[4] [2] = \aes_module_inst.aes_inst.aes_state [33]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[5].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [43:40] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2035 [2:1] \aes_module_inst.aes_inst.aes_state [41] $auto$opt_expr.cc:205:group_cell_inputs$2035 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[5] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [43:42] \aes_module_inst.aes_inst.aes_state [40] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2035 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[5] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[5] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[5] [2] = \aes_module_inst.aes_inst.aes_state [41]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[6].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [51:48] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2031 [2:1] \aes_module_inst.aes_inst.aes_state [49] $auto$opt_expr.cc:205:group_cell_inputs$2031 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[6] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [51:50] \aes_module_inst.aes_inst.aes_state [48] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2031 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[6] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[6] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[6] [2] = \aes_module_inst.aes_inst.aes_state [49]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[7].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [59:56] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2027 [2:1] \aes_module_inst.aes_inst.aes_state [57] $auto$opt_expr.cc:205:group_cell_inputs$2027 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[7] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [59:58] \aes_module_inst.aes_inst.aes_state [56] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2027 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[7] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[7] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[7] [2] = \aes_module_inst.aes_inst.aes_state [57]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[8].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [67:64] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2023 [2:1] \aes_module_inst.aes_inst.aes_state [65] $auto$opt_expr.cc:205:group_cell_inputs$2023 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[8] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [67:66] \aes_module_inst.aes_inst.aes_state [64] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2023 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[8] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[8] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[8] [2] = \aes_module_inst.aes_inst.aes_state [65]
    Consolidated identical input bits for $mux cell $flatten\aes_module_inst.\aes_inst.\mixcolumns_inst.\xtime_gen[9].xtime_inst.$procmux$904:
      Old ports: A={ \aes_module_inst.aes_inst.aes_state [75:72] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2019 [2:1] \aes_module_inst.aes_inst.aes_state [73] $auto$opt_expr.cc:205:group_cell_inputs$2019 [0] 1'1 }, Y=\aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[9] [4:0]
      New ports: A={ \aes_module_inst.aes_inst.aes_state [75:74] \aes_module_inst.aes_inst.aes_state [72] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2019 1'1 }, Y={ \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[9] [4:3] \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[9] [1:0] }
      New connections: \aes_module_inst.aes_inst.mixcolumns_inst.xtime_s[9] [2] = \aes_module_inst.aes_inst.aes_state [73]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.$procmux$1093:
      Old ports: A=2'11, B=2'00, Y=$flatten\uart_inst.$procmux$1093_Y
      New ports: A=1'1, B=1'0, Y=$flatten\uart_inst.$procmux$1093_Y [0]
      New connections: $flatten\uart_inst.$procmux$1093_Y [1] = $flatten\uart_inst.$procmux$1093_Y [0]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.$procmux$1101:
      Old ports: A=2'10, B={ 1'1 $auto$wreduce.cc:461:run$1656 [0] }, Y=$flatten\uart_inst.$procmux$1101_Y
      New ports: A=1'0, B=$auto$wreduce.cc:461:run$1656 [0], Y=$flatten\uart_inst.$procmux$1101_Y [0]
      New connections: $flatten\uart_inst.$procmux$1101_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\uart_inst.$procmux$1106:
      Old ports: A=2'10, B=2'00, Y=$flatten\uart_inst.$procmux$1106_Y
      New ports: A=1'1, B=1'0, Y=$flatten\uart_inst.$procmux$1106_Y [1]
      New connections: $flatten\uart_inst.$procmux$1106_Y [0] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$2072:
      Old ports: A=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073, B=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$a$2064
      New ports: A={ $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [7] 1'0 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [0] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$a$2073 [0] }, B={ 1'0 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074 [1] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][2]$b$2074 [1] 1'0 }, Y={ $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$a$2064 [7] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$a$2064 [2:0] }
      New connections: $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$a$2064 [6:3] = { 1'0 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$a$2064 [2:0] }
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$2069:
      Old ports: A=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$a$2070, B=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$b$2071, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$b$2062
      New ports: A={ 2'00 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$a$2070 [4:3] }, B={ $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][1]$b$2071 [6:5] 2'00 }, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$b$2062 [6:3]
      New connections: { $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$b$2062 [7] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$b$2062 [2:0] } = 4'0000
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$2066:
      Old ports: A=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$a$2067, B=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$b$2068, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$a$2061
      New ports: A={ 2'00 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$a$2067 [0] }, B={ $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][2][0]$b$2068 [2:1] 1'0 }, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$a$2061 [2:0]
      New connections: $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$a$2061 [7:3] = 5'00000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$2063:
      Old ports: A=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$a$2064, B=8'00000000, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][0][0]$b$2059
      New ports: A={ $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$a$2064 [7] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][1]$a$2064 [2:0] }, B=4'0000, Y={ $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][0][0]$b$2059 [7] $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][0][0]$b$2059 [2:0] }
      New connections: $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][0][0]$b$2059 [6:3] = { 1'0 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][0][0]$b$2059 [2:0] }
    Consolidated identical input bits for $mux cell $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$2060:
      Old ports: A=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$a$2061, B=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$b$2062, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][0][0]$a$2058
      New ports: A={ 4'0000 $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$a$2061 [2:0] }, B={ $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][1][0]$b$2062 [6:3] 3'000 }, Y=$memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][0][0]$a$2058 [6:0]
      New connections: $memory$flatten\aes_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$auto$proc_rom.cc:155:do_switch$702$rdmux[0][0][0]$a$2058 [7] = 1'0
  Optimizing cells in module \top_level.
Performed a total of 36 changes.

15.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

15.29.6. Executing OPT_DFF pass (perform DFF optimizations).

15.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

15.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.29.9. Rerunning OPT passes. (Maybe there is more to do..)

15.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

15.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

15.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\aes_module_inst.$procdff$1432 ($adff) from module top_level.

15.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~1 debug messages>

15.29.16. Rerunning OPT passes. (Maybe there is more to do..)

15.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~44 debug messages>

15.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

15.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.29.20. Executing OPT_DFF pass (perform DFF optimizations).

15.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.29.23. Finished OPT passes. (There is nothing left to do.)

15.30. Executing ICE40_WRAPCARRY pass (wrap carries).

15.31. Executing TECHMAP pass (map to technology primitives).

15.31.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

15.31.2. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

15.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$0d149ffe75563ef6fcc1a3dddc59d00af28651a7\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$92adee9538f2381d8e5006822c900eb986d754e8\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$025d767fc934a3e7d59a671de523743ebaa07759\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using template $paramod$constmap:9d7c541a436e2c9bb59914d3a53cc61c099f37b0$paramod$40ccfd5a7f1418017a9af25543d0c43a198b5946\_90_shift_shiftx for cells of type $shift.
Using extmapper simplemap for cells of type $and.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
Creating constmapped module `$paramod$constmap:82d13b1faa4b21cb1487e5b4ddefba1164cb15a1$paramod$40ccfd5a7f1418017a9af25543d0c43a198b5946\_90_shift_shiftx'.

15.31.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:82d13b1faa4b21cb1487e5b4ddefba1164cb15a1$paramod$40ccfd5a7f1418017a9af25543d0c43a198b5946\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$2856.
    dead port 2/2 on $mux $procmux$2850.
    dead port 2/2 on $mux $procmux$2844.
Removed 3 multiplexer ports.
<suppressed ~542 debug messages>

15.31.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:82d13b1faa4b21cb1487e5b4ddefba1164cb15a1$paramod$40ccfd5a7f1418017a9af25543d0c43a198b5946\_90_shift_shiftx.
<suppressed ~2 debug messages>
Removed 0 unused cells and 9 unused wires.
Using template $paramod$constmap:82d13b1faa4b21cb1487e5b4ddefba1164cb15a1$paramod$40ccfd5a7f1418017a9af25543d0c43a198b5946\_90_shift_shiftx for cells of type $shift.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$a285b5a57fe61eabc57c91b8c412748ee1151a85\_90_pmux for cells of type $pmux.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$43474339bb8db435b978167d91ed8375399562e7\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$constmap:6c39e690103f07a79a9a7bc3048d8f2f5e5d9d3c$paramod$f612e35060ae7fb18272569c570296f68e4cce8a\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$91e48372c4727ea71d55ab176117dd734d7fabbc\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:d3a9dbfbcdb01b8f2b0053b3a234a39cfa4a68b0$paramod$725c87e39d9cfa8e3f87960d3d9518e9172132b3\_90_shift_shiftx for cells of type $shift.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
  Constant input on bit 1 of port A: 1'1
  Constant input on bit 2 of port A: 1'1
  Constant input on bit 3 of port A: 1'1
  Constant input on bit 4 of port A: 1'1
  Constant input on bit 5 of port A: 1'1
  Constant input on bit 6 of port A: 1'1
  Constant input on bit 7 of port A: 1'1
Creating constmapped module `$paramod$constmap:0a5066471a34f60e973d392b0f8a69ac616f6e53$paramod$725c87e39d9cfa8e3f87960d3d9518e9172132b3\_90_shift_shiftx'.

15.31.50. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:0a5066471a34f60e973d392b0f8a69ac616f6e53$paramod$725c87e39d9cfa8e3f87960d3d9518e9172132b3\_90_shift_shiftx..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $procmux$5669.
    dead port 2/2 on $mux $procmux$5663.
    dead port 2/2 on $mux $procmux$5657.
    dead port 2/2 on $mux $procmux$5651.
    dead port 2/2 on $mux $procmux$5645.
    dead port 2/2 on $mux $procmux$5639.
    dead port 2/2 on $mux $procmux$5633.
    dead port 2/2 on $mux $procmux$5627.
Removed 8 multiplexer ports.
<suppressed ~741 debug messages>

15.31.51. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:0a5066471a34f60e973d392b0f8a69ac616f6e53$paramod$725c87e39d9cfa8e3f87960d3d9518e9172132b3\_90_shift_shiftx.
<suppressed ~26 debug messages>
Removed 0 unused cells and 13 unused wires.
Using template $paramod$constmap:0a5066471a34f60e973d392b0f8a69ac616f6e53$paramod$725c87e39d9cfa8e3f87960d3d9518e9172132b3\_90_shift_shiftx for cells of type $shift.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~374 debug messages>

15.32. Executing OPT pass (performing simple optimizations).

15.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~7632 debug messages>

15.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~570 debug messages>
Removed a total of 190 cells.

15.32.3. Executing OPT_DFF pass (perform DFF optimizations).

15.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 2036 unused cells and 1005 unused wires.
<suppressed ~2037 debug messages>

15.32.5. Finished fast OPT passes.

15.33. Executing ICE40_OPT pass (performing simple optimizations).

15.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1659.slice[0].carry: CO=\aes_module_inst.bytecount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[10].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[11].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [11]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[12].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[13].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [13]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[14].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [14]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[15].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [15]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[16].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [16]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[17].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [17]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[18].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [18]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[19].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [19]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[20].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [20]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[21].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [21]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[22].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [22]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[23].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [23]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[24].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [24]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[25].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [25]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[26].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [26]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[27].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [27]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[28].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [28]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[29].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [29]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[30].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [30]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[31].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [31]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[32].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [32]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[9].carry: CO=$auto$alumacc.cc:485:replace_alu$1662.C [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1665.slice[0].carry: CO=\aes_module_inst.aes_inst.round [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1668.slice[0].carry: CO=\uart_inst.txctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1671.slice[0].carry: CO=\uart_inst.txbitctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1674.slice[0].carry: CO=\uart_inst.rxctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1677.slice[0].carry: CO=\uart_inst.rxbitctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1680.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1677.X [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1680.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$1680.C [3]

15.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~143 debug messages>

15.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~180 debug messages>
Removed a total of 60 cells.

15.33.4. Executing OPT_DFF pass (perform DFF optimizations).

15.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 28 unused wires.
<suppressed ~1 debug messages>

15.33.6. Rerunning OPT passes. (Removed registers in this run.)

15.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$1659.X [0]

15.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~23 debug messages>

15.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.33.10. Executing OPT_DFF pass (perform DFF optimizations).

15.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 23 unused wires.
<suppressed ~1 debug messages>

15.33.12. Rerunning OPT passes. (Removed registers in this run.)

15.33.13. Running ICE40 specific optimizations.

15.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.33.16. Executing OPT_DFF pass (perform DFF optimizations).

15.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.33.18. Finished OPT passes. (There is nothing left to do.)

15.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

15.35. Executing TECHMAP pass (map to technology primitives).

15.35.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

15.35.2. Continuing TECHMAP pass.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_SDFFCE_NP0P_ for cells of type $_SDFFCE_NP0P_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_NP0_ for cells of type $_SDFF_NP0_.
No more expansions possible.
<suppressed ~1006 debug messages>

15.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[25].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1662.slice[3].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1665.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1668.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1671.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1674.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1677.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1680.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1680.slice[3].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1659.slice[0].carry ($lut).

15.38. Executing ICE40_OPT pass (performing simple optimizations).

15.38.1. Running ICE40 specific optimizations.

15.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~1139 debug messages>

15.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~1980 debug messages>
Removed a total of 660 cells.

15.38.4. Executing OPT_DFF pass (perform DFF optimizations).

15.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 5878 unused wires.
<suppressed ~1 debug messages>

15.38.6. Rerunning OPT passes. (Removed registers in this run.)

15.38.7. Running ICE40 specific optimizations.

15.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~32 debug messages>

15.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~168 debug messages>
Removed a total of 56 cells.

15.38.10. Executing OPT_DFF pass (perform DFF optimizations).

15.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.38.12. Rerunning OPT passes. (Removed registers in this run.)

15.38.13. Running ICE40 specific optimizations.

15.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.38.16. Executing OPT_DFF pass (perform DFF optimizations).

15.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.38.18. Finished OPT passes. (There is nothing left to do.)

15.39. Executing TECHMAP pass (map to technology primitives).

15.39.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

15.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

15.40. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/abc9_model.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ICE40_CARRY_WRAPPER'.
Successfully finished Verilog frontend.

15.41. Executing ABC9 pass.

15.41.1. Executing ABC9_OPS pass (helper functions for ABC9).

15.41.2. Executing ABC9_OPS pass (helper functions for ABC9).

15.41.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module top_level.
Found 0 SCCs.

15.41.4. Executing ABC9_OPS pass (helper functions for ABC9).

15.41.5. Executing PROC pass (convert processes to netlists).

15.41.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

15.41.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

15.41.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

15.41.5.4. Executing PROC_INIT pass (extract init attributes).

15.41.5.5. Executing PROC_ARST pass (detect async resets in processes).

15.41.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

15.41.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

15.41.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

15.41.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

15.41.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

15.41.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

15.41.5.12. Executing OPT_EXPR pass (perform const folding).

15.41.6. Executing TECHMAP pass (map to technology primitives).

15.41.6.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

15.41.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~130 debug messages>

15.41.7. Executing OPT pass (performing simple optimizations).

15.41.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFES.
Optimizing module SB_DFFR.

15.41.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFES'.
Finding identical cells in module `\SB_DFFR'.
Removed a total of 0 cells.

15.41.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \SB_DFFER..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFES..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \SB_DFFR..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.41.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \SB_DFFER.
  Optimizing cells in module \SB_DFFES.
  Optimizing cells in module \SB_DFFR.
Performed a total of 0 changes.

15.41.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\SB_DFFER'.
Finding identical cells in module `\SB_DFFES'.
Finding identical cells in module `\SB_DFFR'.
Removed a total of 0 cells.

15.41.7.6. Executing OPT_DFF pass (perform DFF optimizations).

15.41.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \SB_DFFER..
Finding unused cells or wires in module \SB_DFFES..
Finding unused cells or wires in module \SB_DFFR..

15.41.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module SB_DFFER.
Optimizing module SB_DFFES.
Optimizing module SB_DFFR.

15.41.7.9. Finished OPT passes. (There is nothing left to do.)

15.41.8. Executing TECHMAP pass (map to technology primitives).

15.41.8.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/abc9_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

15.41.8.2. Continuing TECHMAP pass.
Using template SB_DFFES for cells of type SB_DFFES.
Using template SB_DFFR for cells of type SB_DFFR.
Using template SB_DFFER for cells of type SB_DFFER.
No more expansions possible.
<suppressed ~465 debug messages>

15.41.9. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/abc9_model.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

15.41.10. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2050 debug messages>

15.41.11. Executing ABC9_OPS pass (helper functions for ABC9).

15.41.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

15.41.13. Executing TECHMAP pass (map to technology primitives).

15.41.13.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu_brent_kung'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

15.41.13.2. Continuing TECHMAP pass.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_CARRY for cells of type SB_CARRY.
Using template $paramod\SB_LUT4\LUT_INIT=16'0110100110010110 for cells of type SB_LUT4.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $logic_or.
No more expansions possible.
<suppressed ~157 debug messages>

15.41.14. Executing OPT pass (performing simple optimizations).

15.41.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~4 debug messages>

15.41.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~29 debug messages>
Removed a total of 12 cells.

15.41.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.41.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

15.41.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.41.14.6. Executing OPT_DFF pass (perform DFF optimizations).

15.41.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 24 unused wires.
<suppressed ~1 debug messages>

15.41.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.41.14.9. Rerunning OPT passes. (Maybe there is more to do..)

15.41.14.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

15.41.14.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

15.41.14.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

15.41.14.13. Executing OPT_DFF pass (perform DFF optimizations).

15.41.14.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

15.41.14.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

15.41.14.16. Finished OPT passes. (There is nothing left to do.)

15.41.15. Executing AIGMAP pass (map logic to AIG).
Module top_level: replaced 7 cells with 43 new cells, skipped 11 cells.
  replaced 2 cell types:
       2 $_OR_
       5 $_MUX_
  not replaced 3 cell types:
       8 $specify2
       1 $_NOT_
       2 $_AND_

15.41.16. Executing AIGMAP pass (map logic to AIG).
Module top_level: replaced 2070 cells with 11994 new cells, skipped 5353 cells.
  replaced 3 cell types:
     832 $_OR_
     777 $_XOR_
     461 $_MUX_
  not replaced 26 cell types:
      45 $scopeinfo
     220 $_NOT_
    1526 $_AND_
       1 SB_PLL40_CORE
       3 SB_DFFES
     168 SB_DFFR
      48 SB_DFFESS
       2 SB_DFFSR
     160 SB_DFFE
     289 SB_DFFER
     185 SB_DFFESR
      20 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000001100010
       1 SB_DFFNSR
     128 SB_DFFNESR
     320 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000010100001
     220 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011100000
      20 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000010000101
     584 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000011001011
     524 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000000010101
     168 SB_DFFR_$abc9_byp
      20 $paramod$f9adb3855a4afb8cdfa0616e71c7c884b08d7566\SB_RAM40_4K
      49 $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1
     320 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000100010010
       3 SB_DFFES_$abc9_byp
     289 SB_DFFER_$abc9_byp
      40 $paramod$__ABC9_DELAY\DELAY=32'00000000000000000000000100001011

15.41.16.1. Executing ABC9_OPS pass (helper functions for ABC9).

15.41.16.2. Executing ABC9_OPS pass (helper functions for ABC9).

15.41.16.3. Executing XAIGER backend.
<suppressed ~1315 debug messages>
Extracted 6072 AND gates and 18361 wires from module `top_level' to a netlist network with 1148 inputs and 2542 outputs.

15.41.16.4. Executing ABC9_EXE pass (technology mapping using ABC9).

15.41.16.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1148/   2542  and =    5568  lev =   15 (0.88)  mem = 0.21 MB  box = 2557  bb = 2508
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 543 carries.
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =   1148/   2542  and =    8148  lev =   12 (0.68)  mem = 0.24 MB  ch = 1105  box = 2557  bb = 2508
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 543 carries.
ABC: + &if -W 250 -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   52. Obj =  136. Set =  564. CutMin = no
ABC: Node =    8148.  Ch =  1057.  Total mem =    2.56 MB. Peak cut mem =    0.05 MB.
ABC: P:  Del = 3350.00.  Ar =    1657.0.  Edge =     5849.  Cut =    56902.  T =     0.01 sec
ABC: P:  Del = 3350.00.  Ar =    1647.0.  Edge =     5871.  Cut =    55108.  T =     0.01 sec
ABC: P:  Del = 3350.00.  Ar =    1520.0.  Edge =     5233.  Cut =    56184.  T =     0.01 sec
ABC: F:  Del = 3350.00.  Ar =    1353.0.  Edge =     4910.  Cut =    51113.  T =     0.01 sec
ABC: A:  Del = 3350.00.  Ar =    1353.0.  Edge =     4676.  Cut =    50963.  T =     0.01 sec
ABC: A:  Del = 3350.00.  Ar =    1353.0.  Edge =     4676.  Cut =    50736.  T =     0.01 sec
ABC: Total time =     0.06 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =   1148/   2542  and =    6337  lev =   11 (0.69)  mem = 0.22 MB  box = 2557  bb = 2508
ABC: Mapping (K=4)  :  lut =   1352  edge =    4659  lev =    4 (0.34)  Boxes are not in a topological order. Switching to level computation without boxes.
ABC: levB =   11  mem = 0.09 MB
ABC: LUT = 1352 : 2=257 19.0 %  3=235 17.4 %  4=860 63.6 %  Ave = 3.45
ABC: Warning: AIG with boxes has internal fanout in 0 complex flops and 543 carries.
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.42 seconds, total: 0.42 seconds

15.41.16.6. Executing AIGER frontend.
<suppressed ~7392 debug messages>
Removed 10257 unused cells and 20207 unused wires.

15.41.16.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:              $lut cells:     1361
ABC RESULTS:   \SB_DFFR_$abc9_byp cells:      168
ABC RESULTS:   $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 cells:       49
ABC RESULTS:   \SB_DFFES_$abc9_byp cells:        3
ABC RESULTS:   \SB_DFFER_$abc9_byp cells:      289
ABC RESULTS:           input signals:      497
ABC RESULTS:          output signals:     2100
Removing temp directory.

15.41.17. Executing TECHMAP pass (map to technology primitives).

15.41.17.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/abc9_unmap.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

15.41.17.2. Continuing TECHMAP pass.
Using template SB_DFFES_$abc9_byp for cells of type SB_DFFES_$abc9_byp.
Using template SB_DFFER_$abc9_byp for cells of type SB_DFFER_$abc9_byp.
Using template $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1 for cells of type $paramod$__ICE40_CARRY_WRAPPER\LUT=16'0110100110010110\I3_IS_CI=1'1.
Using template SB_DFFR_$abc9_byp for cells of type SB_DFFR_$abc9_byp.
Using template $paramod$f9adb3855a4afb8cdfa0616e71c7c884b08d7566\SB_RAM40_4K for cells of type $paramod$f9adb3855a4afb8cdfa0616e71c7c884b08d7566\SB_RAM40_4K.
No more expansions possible.
<suppressed ~539 debug messages>

15.42. Executing ICE40_WRAPCARRY pass (wrap carries).

15.43. Executing TECHMAP pass (map to technology primitives).

15.43.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

15.43.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 351 unused cells and 24106 unused wires.

15.44. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1408
  1-LUT                9
  2-LUT              264
  3-LUT              275
  4-LUT              860
  with \SB_CARRY    (#0)   40
  with \SB_CARRY    (#1)   41

Eliminating LUTs.
Number of LUTs:     1408
  1-LUT                9
  2-LUT              264
  3-LUT              275
  4-LUT              860
  with \SB_CARRY    (#0)   40
  with \SB_CARRY    (#1)   41

Combining LUTs.
Number of LUTs:     1384
  1-LUT                9
  2-LUT              236
  3-LUT              259
  4-LUT              880
  with \SB_CARRY    (#0)   40
  with \SB_CARRY    (#1)   41

Eliminated 0 LUTs.
Combined 24 LUTs.
<suppressed ~7444 debug messages>

15.45. Executing TECHMAP pass (map to technology primitives).

15.45.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

15.45.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00101010 for cells of type $lut.
Using template $paramod$58df2c605746858c7e53492c8f57d6f1fafa12d2\$lut for cells of type $lut.
Using template $paramod$169e3ff199948acb6289d60ee69a6cbdb1d4057e\$lut for cells of type $lut.
Using template $paramod$16894c241be5ea1f024e9339dea788b4dbe184ae\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$29e6d4598488760861f6b73d2b7f65cb302fdcde\$lut for cells of type $lut.
Using template $paramod$3702268f692b8bf258e428f65d3bca4e1f76d98b\$lut for cells of type $lut.
Using template $paramod$c8f16510db975553c8b0be1064e8f5234175f8a8\$lut for cells of type $lut.
Using template $paramod$173257c402a3003de28bff8c2a49d358e5f4004c\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$d6ca727e39f31d51d29072e0f33aa09c65e37336\$lut for cells of type $lut.
Using template $paramod$f9813472aa48e533b3838c6f2316dc2e78c66111\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100000 for cells of type $lut.
Using template $paramod$7c5af9f666cf38ac789ff4dbbb553e78a6e32f63\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$f85f1073c412d406200a6a72283f918c8b751314\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$ac2ea6024ab66d57878b75ea4ad42990a018eb08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$e51a8a571bee774247b38f52d6e85fd62ae52cea\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001000 for cells of type $lut.
Using template $paramod$59f2a3e232df3029c8bc36978b9bbe72a71dfb5a\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$ad20004ca4cc55e015f230a7d22fd8b3bc00587e\$lut for cells of type $lut.
Using template $paramod$255b0049df4cb49b23955e4a3117758a889578dd\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000100 for cells of type $lut.
Using template $paramod$f8f63b209b7230e81958663ff24fef1613156af7\$lut for cells of type $lut.
Using template $paramod$dc8eb389b2fc3ec6a78d93ff9b548b7fd27b6950\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$097592bb16245531f0716c5ddb18d7090f9c7d9d\$lut for cells of type $lut.
Using template $paramod$153c6cdaaddbc43e6ef3facd06aa851de33910ae\$lut for cells of type $lut.
Using template $paramod$ea5280fce2698f0f291737e66fca69a1d9d058e1\$lut for cells of type $lut.
Using template $paramod$d5841602ab17202e972b290147d14b63f75b0ad1\$lut for cells of type $lut.
Using template $paramod$47a8214374025465e226fa66bee690ff33268a25\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$34ccb0403abd26609d9a7a8ea9a44b40cc4b3caf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$1eac40889014de421a781bc9071d55eb3fb98482\$lut for cells of type $lut.
Using template $paramod$338ce46cf7ff44b9974887dd2adee6c4e0530bed\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$5e9374f44a27c3f8a1c38af244ec43ceb4fb8d4f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$0e36d771a172cfb1acdbb7ed418d288430d54908\$lut for cells of type $lut.
Using template $paramod$4133fe00eb18442862a284ccc67a95f8194d041c\$lut for cells of type $lut.
Using template $paramod$a707fff23748f6aa14ef55b3ae1f771b0f87b0eb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0010 for cells of type $lut.
Using template $paramod$c28a8b7ce0535d090c4cfb52e9c74affd52b110c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6c51c1ba6c39f0c09b896d52432b366f116bd3c1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$90485030abaac57c01da30e6bdcc9273f3019eb8\$lut for cells of type $lut.
Using template $paramod$e85b6eba0dacefc5f73f8748159b8b9599212afc\$lut for cells of type $lut.
Using template $paramod$66caeb00a39d236782a97659e3bd99621b74681b\$lut for cells of type $lut.
Using template $paramod$4586fa76bc179636508b7a3d387ddbd6225a9b95\$lut for cells of type $lut.
Using template $paramod$873c285bdccf0ac2b60d2304ea5cd14bf211d2a6\$lut for cells of type $lut.
Using template $paramod$a5516fc31d1e552de2435200bb732b4d4ad63a9c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$5adaffea86c04e01fb44cf4b55790a46ac42ef0b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010101 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1101 for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101000 for cells of type $lut.
Using template $paramod$5348912da867a611a8088b6b8b27a62d65f1de6e\$lut for cells of type $lut.
Using template $paramod$4385b611926e5c0509dba4de58311d325da0ff0d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010100 for cells of type $lut.
Using template $paramod$ff58554493773336c4e06dc62f25c37448f98c7b\$lut for cells of type $lut.
Using template $paramod$364c9ffbffac467d60dfec81bba4e18476c15602\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00100011 for cells of type $lut.
Using template $paramod$891d17c049ef97ffbed57a5d4edf3f9e83d4f776\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$e6a488add0b5a2d742e2ae29f62ce7616e04271d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$3357e04690749b6c89de0fcd28f53cd216bd2047\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001001 for cells of type $lut.
Using template $paramod$3a0a392069bc969f34c65c546a8c56fbbb67e282\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110001 for cells of type $lut.
Using template $paramod$e76151b422bad8bc81a4515c18f7489f7b34cd59\$lut for cells of type $lut.
Using template $paramod$fccccf8bb2add7667329c686feec7546eb9a3ae3\$lut for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$c0db8f8b81aa2496df7fc609f2c3005b47ee2ccd\$lut for cells of type $lut.
Using template $paramod$35059585e93e18989247e13034fd6a1ce4de9957\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000001 for cells of type $lut.
Using template $paramod$2f5933953e311dffe5861a53a77e08849a1c7767\$lut for cells of type $lut.
Using template $paramod$161491d8314cab9d5d32db4aa31f31f4ef4f6dc6\$lut for cells of type $lut.
Using template $paramod$fe70bb3280659663b8fa2b45f42fda9ccf4ccfaa\$lut for cells of type $lut.
Using template $paramod$f2b1c2975b2c77b81ebcda9e9ed88e8be61c259f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$8f8f3ed0dfbd822273417c0b66ef033f29ee6b95\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$ee7954db7791f7dba0d0a60c296cfdde356f0714\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010101 for cells of type $lut.
Using template $paramod$ba59a6d7bdd6d02f4b42514d6555f56c3dbd5a43\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$26675f983422f74a1925ab04e42db6c2369e1a2e\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~2843 debug messages>
Removed 0 unused cells and 3155 unused wires.

15.46. Executing AUTONAME pass.
Renamed 52422 objects in module top_level (79 iterations).
<suppressed ~3553 debug messages>

15.47. Executing HIERARCHY pass (managing design hierarchy).
Attribute `top' found on module `top_level'. Setting top module to top_level.

15.47.1. Analyzing design hierarchy..
Top module:  \top_level

15.47.2. Analyzing design hierarchy..
Top module:  \top_level
Removed 0 unused modules.

15.48. Printing statistics.

=== top_level ===

   Number of wires:               1192
   Number of wire bits:           5361
   Number of public wires:        1192
   Number of public wire bits:    5361
   Number of ports:                  5
   Number of port bits:             12
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2477
     $scopeinfo                     45
     SB_CARRY                       43
     SB_DFFE                       160
     SB_DFFER                      289
     SB_DFFES                        3
     SB_DFFESR                     185
     SB_DFFESS                      48
     SB_DFFNESR                    128
     SB_DFFNSR                       1
     SB_DFFR                       168
     SB_DFFSR                        2
     SB_LUT4                      1384
     SB_PLL40_CORE                   1
     SB_RAM40_4K                    20

15.49. Executing CHECK pass (checking for obvious problems).
Checking module top_level...
Found and reported 0 problems.

15.50. Executing JSON backend.

Warnings: 10 unique messages, 10 total
End of script. Logfile hash: 8e324c4683, CPU: user 4.30s system 0.08s, MEM: 76.44 MB peak
Yosys 0.47+149 (git sha1 f04b89972, clang++ 18.1.8 -fPIC -O3)
Time spent: 16% 11x techmap (0 sec), 14% 43x opt_expr (0 sec), ...
