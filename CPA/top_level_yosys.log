
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.10+66 (git sha1 97fce665c, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Parsing `top_level.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: top_level.v
Parsing Verilog input from `top_level.v' to AST representation.
Generating RTLIL representation for module `\top_level'.
Successfully finished Verilog frontend.

-- Parsing `uart.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: uart.v
Parsing Verilog input from `uart.v' to AST representation.
Generating RTLIL representation for module `\uart'.
Successfully finished Verilog frontend.

-- Parsing `clkgen48.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: clkgen48.v
Parsing Verilog input from `clkgen48.v' to AST representation.
Generating RTLIL representation for module `\clkgen48'.
Successfully finished Verilog frontend.

-- Parsing `sense_module.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: sense_module.v
Parsing Verilog input from `sense_module.v' to AST representation.
Generating RTLIL representation for module `\sense_module'.
Successfully finished Verilog frontend.

-- Parsing `latticesense.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: latticesense.v
Parsing Verilog input from `latticesense.v' to AST representation.
Generating RTLIL representation for module `\latticesense'.
Successfully finished Verilog frontend.

-- Parsing `decoder.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: decoder.v
Parsing Verilog input from `decoder.v' to AST representation.
Generating RTLIL representation for module `\decoder'.
Note: Assuming pure combinatorial block at decoder.v:14.2-21.5 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

-- Parsing `aes/aes.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: aes/aes.v
Parsing Verilog input from `aes/aes.v' to AST representation.
Generating RTLIL representation for module `\aes'.
Successfully finished Verilog frontend.

-- Parsing `aes/keysched.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: aes/keysched.v
Parsing Verilog input from `aes/keysched.v' to AST representation.
Generating RTLIL representation for module `\keysched'.
Successfully finished Verilog frontend.

-- Parsing `aes/mixcolumn.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: aes/mixcolumn.v
Parsing Verilog input from `aes/mixcolumn.v' to AST representation.
Generating RTLIL representation for module `\mixcolumn'.
Successfully finished Verilog frontend.

-- Parsing `aes/mixcolumns.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: aes/mixcolumns.v
Parsing Verilog input from `aes/mixcolumns.v' to AST representation.
Generating RTLIL representation for module `\mixcolumns'.
Successfully finished Verilog frontend.

-- Parsing `aes/rcon.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: aes/rcon.v
Parsing Verilog input from `aes/rcon.v' to AST representation.
Generating RTLIL representation for module `\rcon'.
Successfully finished Verilog frontend.

-- Parsing `aes/rotword.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: aes/rotword.v
Parsing Verilog input from `aes/rotword.v' to AST representation.
Generating RTLIL representation for module `\rotword'.
Successfully finished Verilog frontend.

-- Parsing `aes/sbox.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: aes/sbox.v
Parsing Verilog input from `aes/sbox.v' to AST representation.
Generating RTLIL representation for module `\GF_SQ_2'.
Generating RTLIL representation for module `\GF_MULS_2'.
Generating RTLIL representation for module `\GF_MULS_SCL_2'.
Generating RTLIL representation for module `\GF_INV_4'.
Generating RTLIL representation for module `\GF_MULS_4'.
Generating RTLIL representation for module `\GF_INV_8'.
Generating RTLIL representation for module `\MUX21I'.
Generating RTLIL representation for module `\SELECT_NOT_8'.
Generating RTLIL representation for module `\bSbox'.
Successfully finished Verilog frontend.

-- Parsing `aes/shiftrows.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: aes/shiftrows.v
Parsing Verilog input from `aes/shiftrows.v' to AST representation.
Generating RTLIL representation for module `\shiftrows'.
Successfully finished Verilog frontend.

-- Parsing `aes/subbytes.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: aes/subbytes.v
Parsing Verilog input from `aes/subbytes.v' to AST representation.
Generating RTLIL representation for module `\subbytes'.
Successfully finished Verilog frontend.

-- Parsing `aes/subword.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: aes/subword.v
Parsing Verilog input from `aes/subword.v' to AST representation.
Generating RTLIL representation for module `\subword'.
Successfully finished Verilog frontend.

-- Parsing `aes/xtime.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: aes/xtime.v
Parsing Verilog input from `aes/xtime.v' to AST representation.
Generating RTLIL representation for module `\xtime'.
Successfully finished Verilog frontend.

-- Running command `hierarchy -top top_level' --

18. Executing HIERARCHY pass (managing design hierarchy).

18.1. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \sense_module
Used module:         \decoder
Used module:         \latticesense
Used module:         \clkgen48
Used module:         \aes
Used module:             \subword
Used module:                 \bSbox
Used module:                     \SELECT_NOT_8
Used module:                         \MUX21I
Used module:                     \GF_INV_8
Used module:                         \GF_MULS_4
Used module:                             \GF_MULS_SCL_2
Used module:                             \GF_MULS_2
Used module:                         \GF_INV_4
Used module:                             \GF_SQ_2
Used module:             \keysched
Used module:                 \rcon
Used module:                 \rotword
Used module:             \mixcolumns
Used module:                 \mixcolumn
Used module:                     \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     \uart
Parameter \CLKS_PER_BIT = 12

18.2. Executing AST frontend in derive mode using pre-parsed AST for module `\uart'.
Parameter \CLKS_PER_BIT = 12
Generating RTLIL representation for module `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100'.

18.3. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \sense_module
Used module:         \decoder
Used module:         \latticesense
Used module:         \clkgen48
Used module:         \aes
Used module:             \subword
Used module:                 \bSbox
Used module:                     \SELECT_NOT_8
Used module:                         \MUX21I
Used module:                     \GF_INV_8
Used module:                         \GF_MULS_4
Used module:                             \GF_MULS_SCL_2
Used module:                             \GF_MULS_2
Used module:                         \GF_INV_4
Used module:                             \GF_SQ_2
Used module:             \keysched
Used module:                 \rcon
Used module:                 \rotword
Used module:             \mixcolumns
Used module:                 \mixcolumn
Used module:                     \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100

18.4. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \sense_module
Used module:         \decoder
Used module:         \latticesense
Used module:         \clkgen48
Used module:         \aes
Used module:             \subword
Used module:                 \bSbox
Used module:                     \SELECT_NOT_8
Used module:                         \MUX21I
Used module:                     \GF_INV_8
Used module:                         \GF_MULS_4
Used module:                             \GF_MULS_SCL_2
Used module:                             \GF_MULS_2
Used module:                         \GF_INV_4
Used module:                             \GF_SQ_2
Used module:             \keysched
Used module:                 \rcon
Used module:                 \rotword
Used module:             \mixcolumns
Used module:                 \mixcolumn
Used module:                     \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100
Removing unused module `\uart'.
Removed 1 unused modules.
Mapping positional arguments of cell bSbox.sel_out (SELECT_NOT_8).
Mapping positional arguments of cell bSbox.inv (GF_INV_8).
Mapping positional arguments of cell bSbox.sel_in (SELECT_NOT_8).
Mapping positional arguments of cell SELECT_NOT_8.m0 (MUX21I).
Mapping positional arguments of cell SELECT_NOT_8.m1 (MUX21I).
Mapping positional arguments of cell SELECT_NOT_8.m2 (MUX21I).
Mapping positional arguments of cell SELECT_NOT_8.m3 (MUX21I).
Mapping positional arguments of cell SELECT_NOT_8.m4 (MUX21I).
Mapping positional arguments of cell SELECT_NOT_8.m5 (MUX21I).
Mapping positional arguments of cell SELECT_NOT_8.m6 (MUX21I).
Mapping positional arguments of cell SELECT_NOT_8.m7 (MUX21I).
Mapping positional arguments of cell GF_INV_8.qmul (GF_MULS_4).
Mapping positional arguments of cell GF_INV_8.pmul (GF_MULS_4).
Mapping positional arguments of cell GF_INV_8.dinv (GF_INV_4).
Mapping positional arguments of cell GF_MULS_4.summul (GF_MULS_SCL_2).
Mapping positional arguments of cell GF_MULS_4.lomul (GF_MULS_2).
Mapping positional arguments of cell GF_MULS_4.himul (GF_MULS_2).
Mapping positional arguments of cell GF_INV_4.qmul (GF_MULS_2).
Mapping positional arguments of cell GF_INV_4.pmul (GF_MULS_2).
Mapping positional arguments of cell GF_INV_4.dinv (GF_SQ_2).

-- Running command `synth_ice40  -json top_level.json' --

19. Executing SYNTH_ICE40 pass.

19.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

19.2. Executing HIERARCHY pass (managing design hierarchy).

19.2.1. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \sense_module
Used module:         \decoder
Used module:         \latticesense
Used module:         \clkgen48
Used module:         \aes
Used module:             \subword
Used module:                 \bSbox
Used module:                     \SELECT_NOT_8
Used module:                         \MUX21I
Used module:                     \GF_INV_8
Used module:                         \GF_MULS_4
Used module:                             \GF_MULS_SCL_2
Used module:                             \GF_MULS_2
Used module:                         \GF_INV_4
Used module:                             \GF_SQ_2
Used module:             \keysched
Used module:                 \rcon
Used module:                 \rotword
Used module:             \mixcolumns
Used module:                 \mixcolumn
Used module:                     \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100

19.2.2. Analyzing design hierarchy..
Top module:  \top_level
Used module:     \sense_module
Used module:         \decoder
Used module:         \latticesense
Used module:         \clkgen48
Used module:         \aes
Used module:             \subword
Used module:                 \bSbox
Used module:                     \SELECT_NOT_8
Used module:                         \MUX21I
Used module:                     \GF_INV_8
Used module:                         \GF_MULS_4
Used module:                             \GF_MULS_SCL_2
Used module:                             \GF_MULS_2
Used module:                         \GF_INV_4
Used module:                             \GF_SQ_2
Used module:             \keysched
Used module:                 \rcon
Used module:                 \rotword
Used module:             \mixcolumns
Used module:                 \mixcolumn
Used module:                     \xtime
Used module:             \shiftrows
Used module:             \subbytes
Used module:     $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100
Removed 0 unused modules.

19.3. Executing PROC pass (convert processes to netlists).

19.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

19.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$595 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$588 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$584 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$577 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$574 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$571 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$568 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$565 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$557 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$550 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$546 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$539 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$536 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$533 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$530 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$527 in module SB_DFFSR.
Marked 1 switch rules as full_case in process $proc$aes/xtime.v:14$297 in module xtime.
Marked 4 switch rules as full_case in process $proc$aes/subbytes.v:27$266 in module subbytes.
Marked 1 switch rules as full_case in process $proc$aes/rcon.v:11$141 in module rcon.
Marked 5 switch rules as full_case in process $proc$aes/aes.v:60$113 in module aes.
Marked 1 switch rules as full_case in process $proc$aes/aes.v:49$110 in module aes.
Marked 1 switch rules as full_case in process $proc$decoder.v:23$109 in module decoder.
Marked 64 switch rules as full_case in process $proc$decoder.v:14$108 in module decoder.
Marked 9 switch rules as full_case in process $proc$sense_module.v:119$67 in module sense_module.
Marked 2 switch rules as full_case in process $proc$sense_module.v:97$64 in module sense_module.
Marked 7 switch rules as full_case in process $proc$uart.v:101$333 in module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.
Removed 1 dead cases from process $proc$uart.v:29$302 in module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.
Marked 9 switch rules as full_case in process $proc$uart.v:29$302 in module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.
Marked 2 switch rules as full_case in process $proc$top_level.v:54$1 in module top_level.
Removed a total of 1 dead cases.

19.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 20 redundant assignments.
Promoted 52 assignments to connections.

19.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$598'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$594'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$587'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$583'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$576'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$573'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$570'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$567'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$564'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$562'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$560'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$556'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$549'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$545'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$538'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$535'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$532'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$529'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$526'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$524'.
  Set init value: \Q = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:27$354'.
  Set init value: \txstate = 2'00
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:26$353'.
  Set init value: \rxstate = 2'00
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:25$352'.
  Set init value: \txrdyout = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:24$351'.
  Set init value: \errout = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:23$350'.
  Set init value: \rxrdyout = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:22$349'.
  Set init value: \txpin = 1'0
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:21$348'.
  Set init value: \rxdataout = 8'00000000
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:20$347'.
  Set init value: \txbitctr = 3'000
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:19$346'.
  Set init value: \rxbitctr = 3'000
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:18$345'.
  Set init value: \txctr = 16'0000000000000000
Found init rule in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:17$344'.
  Set init value: \rxctr = 16'0000000000000000
Found init rule in `\top_level.$proc$top_level.v:19$5'.
  Set init value: \counter = 23'00000000000000000000000

19.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$595'.
Found async reset \R in `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$584'.
Found async reset \S in `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$574'.
Found async reset \R in `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$568'.
Found async reset \S in `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$557'.
Found async reset \R in `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$546'.
Found async reset \S in `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$536'.
Found async reset \R in `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$530'.
Found async reset \rst in `\subbytes.$proc$aes/subbytes.v:27$266'.
Found async reset \rst in `\aes.$proc$aes/aes.v:60$113'.
Found async reset \rstin in `\decoder.$proc$decoder.v:23$109'.
Found async reset \rst in `\sense_module.$proc$sense_module.v:119$67'.
Found async reset \rst in `\sense_module.$proc$sense_module.v:97$64'.
Found async reset \rst in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
Found async reset \rst in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
Found async reset \RST in `\top_level.$proc$top_level.v:54$1'.

19.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$598'.
Creating decoders for process `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$595'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$594'.
Creating decoders for process `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$588'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$587'.
Creating decoders for process `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$584'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$583'.
Creating decoders for process `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$577'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$576'.
Creating decoders for process `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$574'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$573'.
Creating decoders for process `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$571'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$570'.
Creating decoders for process `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$568'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$567'.
Creating decoders for process `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$565'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$564'.
Creating decoders for process `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$563'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$562'.
Creating decoders for process `\SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$561'.
Creating decoders for process `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$560'.
Creating decoders for process `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$557'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$556'.
Creating decoders for process `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$550'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$549'.
Creating decoders for process `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$546'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$545'.
Creating decoders for process `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$539'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$538'.
Creating decoders for process `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$536'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$535'.
Creating decoders for process `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$533'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$532'.
Creating decoders for process `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$530'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$529'.
Creating decoders for process `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$527'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$526'.
Creating decoders for process `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$525'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$524'.
Creating decoders for process `\SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$523'.
Creating decoders for process `\xtime.$proc$aes/xtime.v:14$297'.
     1/1: $0\byte_out[7:0]
Creating decoders for process `\subbytes.$proc$aes/subbytes.v:27$266'.
     1/16: $4$lookahead\state_out$265[127:0]$282
     2/16: $4$bitselwrite$data$aes/subbytes.v:36$264[127:0]$281
     3/16: $4$bitselwrite$mask$aes/subbytes.v:36$263[127:0]$280
     4/16: $3$lookahead\state_out$265[127:0]$279
     5/16: $3$bitselwrite$data$aes/subbytes.v:36$264[127:0]$278
     6/16: $3$bitselwrite$mask$aes/subbytes.v:36$263[127:0]$277
     7/16: $2$lookahead\state_out$265[127:0]$275
     8/16: $2$bitselwrite$data$aes/subbytes.v:36$264[127:0]$274
     9/16: $2$bitselwrite$mask$aes/subbytes.v:36$263[127:0]$273
    10/16: $1$lookahead\state_out$265[127:0]$272
    11/16: $1$bitselwrite$data$aes/subbytes.v:36$264[127:0]$271
    12/16: $1$bitselwrite$mask$aes/subbytes.v:36$263[127:0]$270
    13/16: $0\wordcount[2:0]
    14/16: $0\wait_sub[0:0]
    15/16: $0\subword_out[31:0]
    16/16: $0\done[0:0]
Creating decoders for process `\rcon.$proc$aes/rcon.v:11$141'.
     1/1: $0\rcon_out[31:0]
Creating decoders for process `\keysched.$proc$aes/keysched.v:0$119'.
Creating decoders for process `\aes.$proc$aes/aes.v:60$113'.
     1/7: $0\fsm_state[2:0]
     2/7: $0\subword_sel[0:0]
     3/7: $0\subbytes_ena[0:0]
     4/7: $0\round[3:0]
     5/7: $0\key[127:0]
     6/7: $0\aes_state[127:0]
     7/7: $0\done[0:0]
Creating decoders for process `\aes.$proc$aes/aes.v:49$110'.
     1/1: $0\subword_mux[31:0]
Creating decoders for process `\decoder.$proc$decoder.v:23$109'.
     1/2: $0\codedout[6:0]
     2/2: $0\sensebuf[63:0]
Creating decoders for process `\decoder.$proc$decoder.v:14$108'.
     1/64: $64\count[6:0]
     2/64: $63\count[6:0]
     3/64: $62\count[6:0]
     4/64: $61\count[6:0]
     5/64: $60\count[6:0]
     6/64: $59\count[6:0]
     7/64: $58\count[6:0]
     8/64: $57\count[6:0]
     9/64: $56\count[6:0]
    10/64: $55\count[6:0]
    11/64: $54\count[6:0]
    12/64: $53\count[6:0]
    13/64: $52\count[6:0]
    14/64: $51\count[6:0]
    15/64: $50\count[6:0]
    16/64: $49\count[6:0]
    17/64: $48\count[6:0]
    18/64: $47\count[6:0]
    19/64: $46\count[6:0]
    20/64: $45\count[6:0]
    21/64: $44\count[6:0]
    22/64: $43\count[6:0]
    23/64: $42\count[6:0]
    24/64: $41\count[6:0]
    25/64: $40\count[6:0]
    26/64: $39\count[6:0]
    27/64: $38\count[6:0]
    28/64: $37\count[6:0]
    29/64: $36\count[6:0]
    30/64: $35\count[6:0]
    31/64: $34\count[6:0]
    32/64: $33\count[6:0]
    33/64: $32\count[6:0]
    34/64: $31\count[6:0]
    35/64: $30\count[6:0]
    36/64: $29\count[6:0]
    37/64: $28\count[6:0]
    38/64: $27\count[6:0]
    39/64: $26\count[6:0]
    40/64: $25\count[6:0]
    41/64: $24\count[6:0]
    42/64: $23\count[6:0]
    43/64: $22\count[6:0]
    44/64: $21\count[6:0]
    45/64: $20\count[6:0]
    46/64: $19\count[6:0]
    47/64: $18\count[6:0]
    48/64: $17\count[6:0]
    49/64: $16\count[6:0]
    50/64: $15\count[6:0]
    51/64: $14\count[6:0]
    52/64: $13\count[6:0]
    53/64: $12\count[6:0]
    54/64: $11\count[6:0]
    55/64: $10\count[6:0]
    56/64: $9\count[6:0]
    57/64: $8\count[6:0]
    58/64: $7\count[6:0]
    59/64: $6\count[6:0]
    60/64: $5\count[6:0]
    61/64: $4\count[6:0]
    62/64: $3\count[6:0]
    63/64: $2\count[6:0]
    64/64: $1\count[6:0]
Creating decoders for process `\sense_module.$proc$sense_module.v:119$67'.
     1/19: $4$lookahead\aes_din$66[127:0]$83
     2/19: $4$bitselwrite$data$sense_module.v:140$63[127:0]$82
     3/19: $4$bitselwrite$mask$sense_module.v:140$62[127:0]$81
     4/19: $0\state[2:0]
     5/19: $3$lookahead\aes_din$66[127:0]$80
     6/19: $3$bitselwrite$data$sense_module.v:140$63[127:0]$79
     7/19: $3$bitselwrite$mask$sense_module.v:140$62[127:0]$78
     8/19: $2$lookahead\aes_din$66[127:0]$76
     9/19: $2$bitselwrite$data$sense_module.v:140$63[127:0]$75
    10/19: $2$bitselwrite$mask$sense_module.v:140$62[127:0]$74
    11/19: $1$lookahead\aes_din$66[127:0]$73
    12/19: $1$bitselwrite$data$sense_module.v:140$63[127:0]$72
    13/19: $1$bitselwrite$mask$sense_module.v:140$62[127:0]$71
    14/19: $0\ena_sense[0:0]
    15/19: $0\raddr[8:0]
    16/19: $0\bytecount[10:0]
    17/19: $0\aes_rst[0:0]
    18/19: $0\uart_tx_enable[0:0]
    19/19: $0\uart_data_to_tx[7:0]
Creating decoders for process `\sense_module.$proc$sense_module.v:97$64'.
     1/3: $0\we[0:0]
     2/3: $0\data_to_bram[7:0]
     3/3: $0\waddr[8:0]
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:27$354'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:26$353'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:25$352'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:24$351'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:23$350'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:22$349'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:21$348'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:20$347'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:19$346'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:18$345'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:17$344'.
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
     1/5: $0\txctr[15:0]
     2/5: $0\txstate[1:0]
     3/5: $0\txbitctr[2:0]
     4/5: $0\txpin[0:0]
     5/5: $0\txrdyout[0:0]
Creating decoders for process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
     1/15: $4$lookahead\rxdataout$301[7:0]$320
     2/15: $3$bitselwrite$data$uart.v:69$300[7:0]$319
     3/15: $3$bitselwrite$mask$uart.v:69$299[7:0]$318
     4/15: $0\rxstate[1:0]
     5/15: $3$lookahead\rxdataout$301[7:0]$313
     6/15: $2$lookahead\rxdataout$301[7:0]$311
     7/15: $0\rxctr[15:0]
     8/15: $2$bitselwrite$data$uart.v:69$300[7:0]$310
     9/15: $2$bitselwrite$mask$uart.v:69$299[7:0]$309
    10/15: $1$lookahead\rxdataout$301[7:0]$308
    11/15: $1$bitselwrite$data$uart.v:69$300[7:0]$307
    12/15: $1$bitselwrite$mask$uart.v:69$299[7:0]$306
    13/15: $0\rxbitctr[2:0]
    14/15: $0\errout[0:0]
    15/15: $0\rxrdyout[0:0]
Creating decoders for process `\top_level.$proc$top_level.v:19$5'.
Creating decoders for process `\top_level.$proc$top_level.v:54$1'.
     1/2: $0\counter[22:0]
     2/2: $0\blinker[0:0]

19.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\xtime.\byte_out' from process `\xtime.$proc$aes/xtime.v:14$297'.
No latch inferred for signal `\rcon.\rcon_out' from process `\rcon.$proc$aes/rcon.v:11$141'.
No latch inferred for signal `\keysched.\next_key_tmp[0]' from process `\keysched.$proc$aes/keysched.v:0$119'.
No latch inferred for signal `\keysched.\next_key_tmp[1]' from process `\keysched.$proc$aes/keysched.v:0$119'.
No latch inferred for signal `\keysched.\next_key_tmp[2]' from process `\keysched.$proc$aes/keysched.v:0$119'.
No latch inferred for signal `\keysched.\next_key_tmp[3]' from process `\keysched.$proc$aes/keysched.v:0$119'.
No latch inferred for signal `\aes.\subword_mux' from process `\aes.$proc$aes/aes.v:49$110'.
No latch inferred for signal `\decoder.\i' from process `\decoder.$proc$decoder.v:14$108'.
No latch inferred for signal `\decoder.\count' from process `\decoder.$proc$decoder.v:14$108'.

19.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$595'.
  created $adff cell `$procdff$1530' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$588'.
  created $dff cell `$procdff$1531' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$584'.
  created $adff cell `$procdff$1532' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$577'.
  created $dff cell `$procdff$1533' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$574'.
  created $adff cell `$procdff$1534' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$571'.
  created $dff cell `$procdff$1535' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$568'.
  created $adff cell `$procdff$1536' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$565'.
  created $dff cell `$procdff$1537' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$563'.
  created $dff cell `$procdff$1538' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$561'.
  created $dff cell `$procdff$1539' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$557'.
  created $adff cell `$procdff$1540' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$550'.
  created $dff cell `$procdff$1541' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$546'.
  created $adff cell `$procdff$1542' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$539'.
  created $dff cell `$procdff$1543' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$536'.
  created $adff cell `$procdff$1544' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$533'.
  created $dff cell `$procdff$1545' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$530'.
  created $adff cell `$procdff$1546' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$527'.
  created $dff cell `$procdff$1547' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$525'.
  created $dff cell `$procdff$1548' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$523'.
  created $dff cell `$procdff$1549' with positive edge clock.
Creating register for signal `\subbytes.\done' using process `\subbytes.$proc$aes/subbytes.v:27$266'.
  created $adff cell `$procdff$1550' with positive edge clock and positive level reset.
Creating register for signal `\subbytes.\state_out' using process `\subbytes.$proc$aes/subbytes.v:27$266'.
  created $dff cell `$procdff$1553' with positive edge clock.
Creating register for signal `\subbytes.\subword_out' using process `\subbytes.$proc$aes/subbytes.v:27$266'.
  created $dff cell `$procdff$1556' with positive edge clock.
Creating register for signal `\subbytes.\wait_sub' using process `\subbytes.$proc$aes/subbytes.v:27$266'.
  created $adff cell `$procdff$1557' with positive edge clock and positive level reset.
Creating register for signal `\subbytes.\wordcount' using process `\subbytes.$proc$aes/subbytes.v:27$266'.
  created $adff cell `$procdff$1558' with positive edge clock and positive level reset.
Creating register for signal `\subbytes.$bitselwrite$mask$aes/subbytes.v:36$263' using process `\subbytes.$proc$aes/subbytes.v:27$266'.
  created $adff cell `$procdff$1559' with positive edge clock and positive level reset.
Creating register for signal `\subbytes.$bitselwrite$data$aes/subbytes.v:36$264' using process `\subbytes.$proc$aes/subbytes.v:27$266'.
  created $adff cell `$procdff$1560' with positive edge clock and positive level reset.
Creating register for signal `\subbytes.$lookahead\state_out$265' using process `\subbytes.$proc$aes/subbytes.v:27$266'.
  created $adff cell `$procdff$1561' with positive edge clock and positive level reset.
Creating register for signal `\aes.\done' using process `\aes.$proc$aes/aes.v:60$113'.
  created $adff cell `$procdff$1562' with positive edge clock and positive level reset.
Creating register for signal `\aes.\fsm_state' using process `\aes.$proc$aes/aes.v:60$113'.
  created $adff cell `$procdff$1563' with positive edge clock and positive level reset.
Creating register for signal `\aes.\aes_state' using process `\aes.$proc$aes/aes.v:60$113'.
  created $adff cell `$procdff$1564' with positive edge clock and positive level reset.
Creating register for signal `\aes.\key' using process `\aes.$proc$aes/aes.v:60$113'.
  created $dff cell `$procdff$1567' with positive edge clock.
Creating register for signal `\aes.\round' using process `\aes.$proc$aes/aes.v:60$113'.
  created $adff cell `$procdff$1568' with positive edge clock and positive level reset.
Creating register for signal `\aes.\subbytes_ena' using process `\aes.$proc$aes/aes.v:60$113'.
  created $adff cell `$procdff$1569' with positive edge clock and positive level reset.
Creating register for signal `\aes.\subword_sel' using process `\aes.$proc$aes/aes.v:60$113'.
  created $adff cell `$procdff$1570' with positive edge clock and positive level reset.
Creating register for signal `\decoder.\codedout' using process `\decoder.$proc$decoder.v:23$109'.
  created $adff cell `$procdff$1571' with positive edge clock and positive level reset.
Creating register for signal `\decoder.\sensebuf' using process `\decoder.$proc$decoder.v:23$109'.
  created $adff cell `$procdff$1572' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\uart_data_to_tx' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1573' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\uart_tx_enable' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1574' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\state' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1575' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\aes_rst' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1576' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\aes_din' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $dff cell `$procdff$1579' with positive edge clock.
Creating register for signal `\sense_module.\bytecount' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1580' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\raddr' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1581' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\ena_sense' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1582' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.$bitselwrite$mask$sense_module.v:140$62' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1583' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.$bitselwrite$data$sense_module.v:140$63' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1584' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.$lookahead\aes_din$66' using process `\sense_module.$proc$sense_module.v:119$67'.
  created $adff cell `$procdff$1585' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\waddr' using process `\sense_module.$proc$sense_module.v:97$64'.
  created $adff cell `$procdff$1586' with positive edge clock and positive level reset.
Creating register for signal `\sense_module.\data_to_bram' using process `\sense_module.$proc$sense_module.v:97$64'.
  created $dff cell `$procdff$1589' with positive edge clock.
Creating register for signal `\sense_module.\we' using process `\sense_module.$proc$sense_module.v:97$64'.
  created $adff cell `$procdff$1590' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\txrdyout' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
  created $adff cell `$procdff$1591' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\txpin' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
  created $adff cell `$procdff$1592' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\txctr' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
  created $adff cell `$procdff$1593' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\txbitctr' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
  created $adff cell `$procdff$1594' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\txstate' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
  created $adff cell `$procdff$1595' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\rxdataout' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $dff cell `$procdff$1598' with positive edge clock.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\rxrdyout' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $adff cell `$procdff$1599' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\errout' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $adff cell `$procdff$1600' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\rxctr' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $adff cell `$procdff$1601' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\rxbitctr' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $adff cell `$procdff$1602' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.\rxstate' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $adff cell `$procdff$1603' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$bitselwrite$mask$uart.v:69$299' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $adff cell `$procdff$1604' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$bitselwrite$data$uart.v:69$300' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $adff cell `$procdff$1605' with positive edge clock and positive level reset.
Creating register for signal `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$lookahead\rxdataout$301' using process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
  created $adff cell `$procdff$1606' with positive edge clock and positive level reset.
Creating register for signal `\top_level.\blinker' using process `\top_level.$proc$top_level.v:54$1'.
  created $adff cell `$procdff$1607' with positive edge clock and positive level reset.
Creating register for signal `\top_level.\counter' using process `\top_level.$proc$top_level.v:54$1'.
  created $adff cell `$procdff$1608' with positive edge clock and positive level reset.

19.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

19.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$598'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$595'.
Removing empty process `SB_DFFNES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1386$595'.
Removing empty process `SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$594'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$588'.
Removing empty process `SB_DFFNESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1328$588'.
Removing empty process `SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$587'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$584'.
Removing empty process `SB_DFFNER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1251$584'.
Removing empty process `SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$583'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$577'.
Removing empty process `SB_DFFNESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1193$577'.
Removing empty process `SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$576'.
Removing empty process `SB_DFFNS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1122$574'.
Removing empty process `SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$573'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$571'.
Removing empty process `SB_DFFNSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1072$571'.
Removing empty process `SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$570'.
Removing empty process `SB_DFFNR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:1001$568'.
Removing empty process `SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$567'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$565'.
Removing empty process `SB_DFFNSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:951$565'.
Removing empty process `SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$564'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$563'.
Removing empty process `SB_DFFNE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:906$563'.
Removing empty process `SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$562'.
Removing empty process `SB_DFFN.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:868$561'.
Removing empty process `SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$560'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$557'.
Removing empty process `SB_DFFES.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:789$557'.
Removing empty process `SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$556'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$550'.
Removing empty process `SB_DFFESS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:731$550'.
Removing empty process `SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$549'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$546'.
Removing empty process `SB_DFFER.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:654$546'.
Removing empty process `SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$545'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$539'.
Removing empty process `SB_DFFESR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:596$539'.
Removing empty process `SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$538'.
Removing empty process `SB_DFFS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:525$536'.
Removing empty process `SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$535'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$533'.
Removing empty process `SB_DFFSS.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:475$533'.
Removing empty process `SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$532'.
Removing empty process `SB_DFFR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:404$530'.
Removing empty process `SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$529'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$527'.
Removing empty process `SB_DFFSR.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:354$527'.
Removing empty process `SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$526'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$525'.
Removing empty process `SB_DFFE.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:309$525'.
Removing empty process `SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:0$524'.
Removing empty process `SB_DFF.$proc$/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_sim.v:271$523'.
Found and cleaned up 1 empty switch in `\xtime.$proc$aes/xtime.v:14$297'.
Removing empty process `xtime.$proc$aes/xtime.v:14$297'.
Found and cleaned up 3 empty switches in `\subbytes.$proc$aes/subbytes.v:27$266'.
Removing empty process `subbytes.$proc$aes/subbytes.v:27$266'.
Found and cleaned up 1 empty switch in `\rcon.$proc$aes/rcon.v:11$141'.
Removing empty process `rcon.$proc$aes/rcon.v:11$141'.
Removing empty process `keysched.$proc$aes/keysched.v:0$119'.
Found and cleaned up 4 empty switches in `\aes.$proc$aes/aes.v:60$113'.
Removing empty process `aes.$proc$aes/aes.v:60$113'.
Found and cleaned up 1 empty switch in `\aes.$proc$aes/aes.v:49$110'.
Removing empty process `aes.$proc$aes/aes.v:49$110'.
Removing empty process `decoder.$proc$decoder.v:23$109'.
Found and cleaned up 64 empty switches in `\decoder.$proc$decoder.v:14$108'.
Removing empty process `decoder.$proc$decoder.v:14$108'.
Found and cleaned up 8 empty switches in `\sense_module.$proc$sense_module.v:119$67'.
Removing empty process `sense_module.$proc$sense_module.v:119$67'.
Found and cleaned up 1 empty switch in `\sense_module.$proc$sense_module.v:97$64'.
Removing empty process `sense_module.$proc$sense_module.v:97$64'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:27$354'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:26$353'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:25$352'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:24$351'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:23$350'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:22$349'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:21$348'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:20$347'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:19$346'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:18$345'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:17$344'.
Found and cleaned up 6 empty switches in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:101$333'.
Found and cleaned up 8 empty switches in `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
Removing empty process `$paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.$proc$uart.v:29$302'.
Removing empty process `top_level.$proc$top_level.v:19$5'.
Found and cleaned up 1 empty switch in `\top_level.$proc$top_level.v:54$1'.
Removing empty process `top_level.$proc$top_level.v:54$1'.
Cleaned up 116 empty switches.

19.3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module xtime.
Optimizing module subword.
Optimizing module subbytes.
Optimizing module shiftrows.
Optimizing module bSbox.
Optimizing module SELECT_NOT_8.
Optimizing module MUX21I.
Optimizing module GF_INV_8.
Optimizing module GF_MULS_4.
Optimizing module GF_INV_4.
Optimizing module GF_MULS_SCL_2.
Optimizing module GF_MULS_2.
Optimizing module GF_SQ_2.
Optimizing module rotword.
Optimizing module rcon.
Optimizing module mixcolumns.
Optimizing module mixcolumn.
Optimizing module keysched.
Optimizing module aes.
<suppressed ~6 debug messages>
Optimizing module decoder.
Optimizing module latticesense.
Optimizing module sense_module.
<suppressed ~14 debug messages>
Optimizing module clkgen48.
Optimizing module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.
<suppressed ~20 debug messages>
Optimizing module top_level.

19.4. Executing FLATTEN pass (flatten design).
Deleting now unused module xtime.
Deleting now unused module subword.
Deleting now unused module subbytes.
Deleting now unused module shiftrows.
Deleting now unused module bSbox.
Deleting now unused module SELECT_NOT_8.
Deleting now unused module MUX21I.
Deleting now unused module GF_INV_8.
Deleting now unused module GF_MULS_4.
Deleting now unused module GF_INV_4.
Deleting now unused module GF_MULS_SCL_2.
Deleting now unused module GF_MULS_2.
Deleting now unused module GF_SQ_2.
Deleting now unused module rotword.
Deleting now unused module rcon.
Deleting now unused module mixcolumns.
Deleting now unused module mixcolumn.
Deleting now unused module keysched.
Deleting now unused module aes.
Deleting now unused module decoder.
Deleting now unused module latticesense.
Deleting now unused module sense_module.
Deleting now unused module clkgen48.
Deleting now unused module $paramod\uart\CLKS_PER_BIT=s32'00000000000000000000000000001100.
<suppressed ~45 debug messages>

19.5. Executing TRIBUF pass.

19.6. Executing DEMINOUT pass (demote inout ports to input or output).

19.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~86 debug messages>

19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 118 unused cells and 998 unused wires.
<suppressed ~132 debug messages>

19.9. Executing CHECK pass (checking for obvious problems).
Checking module top_level...
Found and reported 0 problems.

19.10. Executing OPT pass (performing simple optimizations).

19.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~243 debug messages>
Removed a total of 81 cells.

19.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $flatten\sense_module_inst.$procmux$1155.
    dead port 2/2 on $mux $flatten\sense_module_inst.$procmux$1157.
    dead port 2/2 on $mux $flatten\sense_module_inst.$procmux$1214.
    dead port 1/2 on $mux $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procmux$787.
    dead port 2/2 on $mux $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procmux$789.
    dead port 2/2 on $mux $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procmux$813.
    dead port 2/2 on $mux $flatten\uart_inst.$procmux$1423.
    dead port 2/2 on $mux $flatten\uart_inst.$procmux$1466.
Removed 8 multiplexer ports.
<suppressed ~54 debug messages>

19.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
    New ctrl vector for $pmux cell $flatten\sense_module_inst.\aes_inst.$procmux$899: { $flatten\sense_module_inst.\aes_inst.$procmux$896_CMP $auto$opt_reduce.cc:134:opt_mux$1610 }
    New ctrl vector for $pmux cell $flatten\sense_module_inst.\aes_inst.$procmux$923: { $flatten\sense_module_inst.\aes_inst.$procmux$897_CMP $auto$opt_reduce.cc:134:opt_mux$1612 $flatten\sense_module_inst.\aes_inst.$procmux$887_CMP }
    New ctrl vector for $pmux cell $flatten\sense_module_inst.\aes_inst.$procmux$946: { $auto$opt_reduce.cc:134:opt_mux$1614 $flatten\sense_module_inst.\aes_inst.$procmux$883_CMP }
    New ctrl vector for $pmux cell $flatten\uart_inst.$procmux$1468: { $flatten\uart_inst.$procmux$1459_CMP $flatten\uart_inst.$procmux$1424_CMP $auto$opt_reduce.cc:134:opt_mux$1616 }
    New ctrl vector for $pmux cell $flatten\sense_module_inst.$procmux$1303: { $flatten\sense_module_inst.$procmux$1158_CMP $auto$opt_reduce.cc:134:opt_mux$1618 }
    New ctrl vector for $pmux cell $flatten\sense_module_inst.$procmux$1326: { $auto$opt_reduce.cc:134:opt_mux$1620 $flatten\sense_module_inst.$procmux$1196_CMP $flatten\sense_module_inst.$procmux$1190_CMP }
  Optimizing cells in module \top_level.
Performed a total of 6 changes.

19.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

19.10.6. Executing OPT_DFF pass (perform DFF optimizations).

19.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 94 unused wires.
<suppressed ~1 debug messages>

19.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.10.9. Rerunning OPT passes. (Maybe there is more to do..)

19.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

19.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
    New ctrl vector for $pmux cell $flatten\uart_inst.$procmux$1365: { $flatten\uart_inst.$procmux$1375_CMP $auto$opt_reduce.cc:134:opt_mux$1622 }
    New ctrl vector for $pmux cell $flatten\uart_inst.$procmux$1476: { $flatten\uart_inst.$procmux$1459_CMP $flatten\uart_inst.$procmux$1455_CMP $auto$opt_reduce.cc:134:opt_mux$1624 }
  Optimizing cells in module \top_level.
Performed a total of 2 changes.

19.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.10.13. Executing OPT_DFF pass (perform DFF optimizations).

19.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.10.16. Rerunning OPT passes. (Maybe there is more to do..)

19.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

19.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

19.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.10.20. Executing OPT_DFF pass (perform DFF optimizations).

19.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.10.23. Finished OPT passes. (There is nothing left to do.)

19.11. Executing FSM pass (extract and optimize FSM).

19.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top_level.sense_module_inst.aes_inst.fsm_state as FSM state register:
    Circuit seems to be self-resetting.
Not marking top_level.sense_module_inst.sensor_dec_inst.codedout as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top_level.sense_module_inst.state as FSM state register:
    Circuit seems to be self-resetting.
Not marking top_level.uart_inst.rxstate as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Not marking top_level.uart_inst.txstate as FSM state register:
    Register has an initialization value.

19.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

19.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

19.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

19.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

19.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

19.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

19.12. Executing OPT pass (performing simple optimizations).

19.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~56 debug messages>

19.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

19.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$1607 ($adff) from module top_level (D = $xor$top_level.v:64$4_Y [0], Q = \blinker).
Adding EN signal on $flatten\uart_inst.$procdff$1602 ($adff) from module top_level (D = $flatten\uart_inst.$0\rxbitctr[2:0], Q = \uart_inst.rxbitctr).
Adding EN signal on $flatten\uart_inst.$procdff$1599 ($adff) from module top_level (D = $flatten\uart_inst.$0\rxrdyout[0:0], Q = \uart_inst.rxrdyout).
Adding EN signal on $flatten\uart_inst.$procdff$1598 ($dff) from module top_level (D = $flatten\uart_inst.$0$lookahead\rxdataout$301[7:0]$305, Q = \uart_inst.rxdataout).
Adding EN signal on $flatten\uart_inst.$procdff$1595 ($adff) from module top_level (D = $flatten\uart_inst.$0\txstate[1:0], Q = \uart_inst.txstate).
Adding EN signal on $flatten\uart_inst.$procdff$1594 ($adff) from module top_level (D = $flatten\uart_inst.$0\txbitctr[2:0], Q = \uart_inst.txbitctr).
Adding EN signal on $flatten\uart_inst.$procdff$1592 ($adff) from module top_level (D = $flatten\uart_inst.$0\txpin[0:0], Q = \uart_inst.txpin).
Adding EN signal on $flatten\uart_inst.$procdff$1591 ($adff) from module top_level (D = $flatten\uart_inst.$0\txrdyout[0:0], Q = \uart_inst.txrdyout).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procdff$1558 ($adff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$0\wordcount[2:0], Q = \sense_module_inst.aes_inst.subbytes_inst.wordcount).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procdff$1557 ($adff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$0\wait_sub[0:0], Q = \sense_module_inst.aes_inst.subbytes_inst.wait_sub).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procdff$1556 ($dff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$shiftx$aes/subbytes.v:0$296_Y, Q = \sense_module_inst.aes_inst.subbytes_inst.subword_out).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procdff$1553 ($dff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$or$aes/subbytes.v:0$292_Y, Q = \sense_module_inst.aes_inst.subbytes_inst.state_out).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procdff$1550 ($adff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$0\done[0:0], Q = \sense_module_inst.aes_inst.subbytes_inst.done).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.$procdff$1570 ($adff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.$0\subword_sel[0:0], Q = \sense_module_inst.aes_inst.subword_sel).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.$procdff$1569 ($adff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.$procmux$914_Y, Q = \sense_module_inst.aes_inst.subbytes_ena).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.$procdff$1568 ($adff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.$0\round[3:0], Q = \sense_module_inst.aes_inst.round).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.$procdff$1567 ($dff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.$0\key[127:0], Q = \sense_module_inst.aes_inst.key).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.$procdff$1564 ($adff) from module top_level (D = { $flatten\sense_module_inst.\aes_inst.$0\aes_state[127:0] [103:96] $flatten\sense_module_inst.\aes_inst.$0\aes_state[127:0] [71:64] $flatten\sense_module_inst.\aes_inst.$0\aes_state[127:0] [39:32] $flatten\sense_module_inst.\aes_inst.$0\aes_state[127:0] [7:0] }, Q = { \sense_module_inst.aes_inst.aes_state [103:96] \sense_module_inst.aes_inst.aes_state [71:64] \sense_module_inst.aes_inst.aes_state [39:32] \sense_module_inst.aes_inst.aes_state [7:0] }).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.$procdff$1564 ($adff) from module top_level (D = { $flatten\sense_module_inst.\aes_inst.$0\aes_state[127:0] [127:104] $flatten\sense_module_inst.\aes_inst.$0\aes_state[127:0] [95:72] $flatten\sense_module_inst.\aes_inst.$0\aes_state[127:0] [63:40] $flatten\sense_module_inst.\aes_inst.$0\aes_state[127:0] [31:8] }, Q = { \sense_module_inst.aes_inst.aes_state [127:104] \sense_module_inst.aes_inst.aes_state [95:72] \sense_module_inst.aes_inst.aes_state [63:40] \sense_module_inst.aes_inst.aes_state [31:8] }).
Adding EN signal on $flatten\sense_module_inst.\aes_inst.$procdff$1562 ($adff) from module top_level (D = $flatten\sense_module_inst.\aes_inst.$0\done[0:0], Q = \sense_module_inst.aes_inst.done).
Adding EN signal on $flatten\sense_module_inst.$procdff$1589 ($dff) from module top_level (D = { 1'0 \sense_module_inst.sensor_dec_inst.codedout }, Q = \sense_module_inst.data_to_bram).
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$1751 ($dffe) from module top_level.
Adding EN signal on $flatten\sense_module_inst.$procdff$1586 ($adff) from module top_level (D = $flatten\sense_module_inst.$add$sense_module.v:106$65_Y, Q = \sense_module_inst.waddr).
Adding EN signal on $flatten\sense_module_inst.$procdff$1582 ($adff) from module top_level (D = 1'1, Q = \sense_module_inst.ena_sense).
Adding EN signal on $flatten\sense_module_inst.$procdff$1581 ($adff) from module top_level (D = $flatten\sense_module_inst.$0\raddr[8:0], Q = \sense_module_inst.raddr).
Adding EN signal on $flatten\sense_module_inst.$procdff$1580 ($adff) from module top_level (D = $flatten\sense_module_inst.$0\bytecount[10:0], Q = \sense_module_inst.bytecount).
Adding EN signal on $flatten\sense_module_inst.$procdff$1579 ($dff) from module top_level (D = $flatten\sense_module_inst.$or$sense_module.v:0$93_Y, Q = \sense_module_inst.aes_din).
Adding EN signal on $flatten\sense_module_inst.$procdff$1576 ($adff) from module top_level (D = $flatten\sense_module_inst.$0\aes_rst[0:0], Q = \sense_module_inst.aes_rst).
Adding EN signal on $flatten\sense_module_inst.$procdff$1574 ($adff) from module top_level (D = $flatten\sense_module_inst.$0\uart_tx_enable[0:0], Q = \sense_module_inst.uart_tx_enable).
Adding EN signal on $flatten\sense_module_inst.$procdff$1573 ($adff) from module top_level (D = $flatten\sense_module_inst.$0\uart_data_to_tx[7:0], Q = \sense_module_inst.uart_data_to_tx).

19.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 21 unused cells and 21 unused wires.
<suppressed ~22 debug messages>

19.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~21 debug messages>

19.12.9. Rerunning OPT passes. (Maybe there is more to do..)

19.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

19.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
    New ctrl vector for $pmux cell $flatten\uart_inst.$procmux$1468: { $flatten\uart_inst.$procmux$1459_CMP $flatten\uart_inst.$procmux$1424_CMP }
  Optimizing cells in module \top_level.
Performed a total of 1 changes.

19.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~45 debug messages>
Removed a total of 15 cells.

19.12.13. Executing OPT_DFF pass (perform DFF optimizations).

19.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 2 unused cells and 17 unused wires.
<suppressed ~3 debug messages>

19.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.12.16. Rerunning OPT passes. (Maybe there is more to do..)

19.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

19.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

19.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.12.20. Executing OPT_DFF pass (perform DFF optimizations).

19.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.12.23. Finished OPT passes. (There is nothing left to do.)

19.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 9 bits (of 32) from port B of cell top_level.$lt$top_level.v:61$2 ($lt).
Removed top 31 bits (of 32) from port B of cell top_level.$add$top_level.v:62$3 ($add).
Removed top 9 bits (of 32) from port Y of cell top_level.$add$top_level.v:62$3 ($add).
Removed top 31 bits (of 32) from port B of cell top_level.$xor$top_level.v:64$4 ($xor).
Removed top 31 bits (of 32) from port Y of cell top_level.$xor$top_level.v:64$4 ($xor).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1714 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1709 ($ne).
Removed cell top_level.$flatten\uart_inst.$procmux$1519 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1517 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1502 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1464 ($mux).
Removed top 1 bits (of 2) from mux cell top_level.$flatten\uart_inst.$procmux$1457 ($mux).
Removed top 1 bits (of 2) from port B of cell top_level.$flatten\uart_inst.$procmux$1455_CMP0 ($eq).
Removed top 1 bits (of 2) from mux cell top_level.$flatten\uart_inst.$procmux$1444 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1421 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1411 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1401 ($mux).
Removed top 1 bits (of 2) from mux cell top_level.$flatten\uart_inst.$procmux$1393 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1389 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1385 ($mux).
Removed top 1 bits (of 2) from mux cell top_level.$flatten\uart_inst.$procmux$1383 ($mux).
Removed cell top_level.$flatten\uart_inst.$procmux$1377 ($mux).
Removed top 1 bits (of 2) from port B of cell top_level.$flatten\uart_inst.$procmux$1374_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1767 ($ne).
Removed top 12 bits (of 16) from port B of cell top_level.$flatten\uart_inst.$eq$uart.v:125$335 ($eq).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1765 ($ne).
Removed top 7 bits (of 8) from port A of cell top_level.$flatten\uart_inst.$shl$uart.v:0$323 ($shl).
Removed top 12 bits (of 16) from port B of cell top_level.$flatten\uart_inst.$eq$uart.v:67$317 ($eq).
Removed top 13 bits (of 16) from port B of cell top_level.$flatten\uart_inst.$eq$uart.v:53$314 ($eq).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1657 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1659 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1661 ($ne).
Removed top 2 bits (of 3) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1683 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1639 ($ne).
Removed top 1 bits (of 2) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1630 ($ne).
Removed top 6 bits (of 7) from mux cell top_level.$flatten\sense_module_inst.\sensor_dec_inst.$procmux$1145 ($mux).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column0_inst.\xb0.$xor$aes/xtime.v:16$298 ($xor).
Removed top 2 bits (of 128) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.$xor$aes/aes.v:72$114 ($xor).
Removed top 1 bits (of 3) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.$procmux$888_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.$procmux$892_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell top_level.$flatten\sense_module_inst.\aes_inst.$procmux$894 ($mux).
Removed top 2 bits (of 3) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.$procmux$896_CMP0 ($eq).
Removed cell top_level.$flatten\sense_module_inst.\aes_inst.$procmux$904 ($mux).
Removed top 2 bits (of 3) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1796 ($ne).
Removed cell top_level.$flatten\sense_module_inst.\aes_inst.$procmux$921 ($mux).
Removed cell top_level.$flatten\sense_module_inst.\aes_inst.$procmux$941 ($mux).
Removed top 1 bits (of 3) from port B of cell top_level.$auto$opt_dff.cc:198:make_patterns_logic$1774 ($ne).
Removed cell top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procmux$865 ($mux).
Removed cell top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procmux$850 ($mux).
Removed cell top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procmux$841 ($mux).
Removed cell top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$procmux$838 ($mux).
Removed top 23 bits (of 32) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$shiftx$aes/subbytes.v:0$296 ($shiftx).
Removed top 24 bits (of 32) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$shl$aes/subbytes.v:0$289 ($shl).
Removed top 96 bits (of 128) from port Y of cell top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$and$aes/subbytes.v:0$286 ($and).
Removed top 24 bits (of 32) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$shl$aes/subbytes.v:0$285 ($shl).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column3_inst.\xb1.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column3_inst.\xb2.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column3_inst.\xb3.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column2_inst.\xb1.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column2_inst.\xb2.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column2_inst.\xb3.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column1_inst.\xb1.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column1_inst.\xb2.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column1_inst.\xb3.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column0_inst.\xb1.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column0_inst.\xb2.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column0_inst.\xb3.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column3_inst.\xb0.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column2_inst.\xb0.$xor$aes/xtime.v:16$298 ($xor).
Removed top 3 bits (of 8) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column1_inst.\xb0.$xor$aes/xtime.v:16$298 ($xor).
Removed top 24 bits (of 32) from mux cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$procmux$870 ($pmux).
Removed top 1 bits (of 4) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$procmux$874_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$procmux$875_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$procmux$876_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$procmux$877_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$procmux$878_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$procmux$879_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.\rcon_inst.$procmux$880_CMP0 ($eq).
Removed top 24 bits (of 32) from port B of cell top_level.$flatten\sense_module_inst.\aes_inst.\keysched_inst.$xor$aes/keysched.v:32$120 ($xor).
Removed cell top_level.$flatten\sense_module_inst.$procmux$1350 ($mux).
Removed cell top_level.$flatten\sense_module_inst.$procmux$1347 ($mux).
Removed cell top_level.$flatten\sense_module_inst.$procmux$1342 ($mux).
Removed cell top_level.$flatten\sense_module_inst.$procmux$1339 ($mux).
Removed cell top_level.$flatten\sense_module_inst.$procmux$1292 ($mux).
Removed cell top_level.$flatten\sense_module_inst.$procmux$1271 ($mux).
Removed cell top_level.$flatten\sense_module_inst.$procmux$1266 ($mux).
Removed cell top_level.$flatten\sense_module_inst.$procmux$1263 ($mux).
Removed top 2 bits (of 3) from mux cell top_level.$flatten\sense_module_inst.$procmux$1204 ($mux).
Removed top 2 bits (of 3) from port B of cell top_level.$flatten\sense_module_inst.$procmux$1200_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell top_level.$flatten\sense_module_inst.$procmux$1198 ($mux).
Removed top 1 bits (of 3) from port B of cell top_level.$flatten\sense_module_inst.$procmux$1196_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell top_level.$flatten\sense_module_inst.$procmux$1194 ($mux).
Removed top 1 bits (of 3) from port B of cell top_level.$flatten\sense_module_inst.$procmux$1190_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell top_level.$flatten\sense_module_inst.$procmux$1187 ($mux).
Removed top 5 bits (of 11) from port B of cell top_level.$flatten\sense_module_inst.$eq$sense_module.v:183$102 ($eq).
Removed top 17 bits (of 32) from port B of cell top_level.$flatten\sense_module_inst.$shiftx$sense_module.v:0$100 ($shiftx).
Removed top 6 bits (of 11) from port B of cell top_level.$flatten\sense_module_inst.$eq$sense_module.v:161$95 ($eq).
Removed top 18 bits (of 32) from port B of cell top_level.$flatten\sense_module_inst.$shl$sense_module.v:0$90 ($shl).
Removed top 120 bits (of 128) from port Y of cell top_level.$flatten\sense_module_inst.$and$sense_module.v:0$87 ($and).
Removed top 18 bits (of 32) from port B of cell top_level.$flatten\sense_module_inst.$shl$sense_module.v:0$86 ($shl).
Removed top 1 bits (of 6) from port B of cell top_level.$flatten\sense_module_inst.$eq$sense_module.v:131$77 ($eq).
Removed top 9 bits (of 32) from wire top_level.$add$top_level.v:62$3_Y.
Removed top 120 bits (of 128) from wire top_level.$flatten\sense_module_inst.$and$sense_module.v:0$87_Y.
Removed top 1 bits (of 3) from wire top_level.$flatten\sense_module_inst.$procmux$1187_Y.
Removed top 2 bits (of 3) from wire top_level.$flatten\sense_module_inst.$procmux$1194_Y.
Removed top 1 bits (of 3) from wire top_level.$flatten\sense_module_inst.$procmux$1198_Y.
Removed top 2 bits (of 3) from wire top_level.$flatten\sense_module_inst.$procmux$1204_Y.
Removed top 1 bits (of 3) from wire top_level.$flatten\sense_module_inst.\aes_inst.$procmux$894_Y.
Removed top 96 bits (of 128) from wire top_level.$flatten\sense_module_inst.\aes_inst.\subbytes_inst.$and$aes/subbytes.v:0$286_Y.
Removed top 6 bits (of 7) from wire top_level.$flatten\sense_module_inst.\sensor_dec_inst.$1\count[6:0].

19.14. Executing PEEPOPT pass (run peephole optimizers).

19.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 34 unused wires.
<suppressed ~1 debug messages>

19.16. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top_level that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\uart_inst.$shl$uart.v:0$323 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\uart_inst.$procmux$1424_CMP.
    Found 1 candidates: $flatten\uart_inst.$shl$uart.v:0$321
    Analyzing resource sharing with $flatten\uart_inst.$shl$uart.v:0$321 ($shl):
      Found 1 activation_patterns using ctrl signal $flatten\uart_inst.$procmux$1424_CMP.
      Activation pattern for cell $flatten\uart_inst.$shl$uart.v:0$323: $flatten\uart_inst.$procmux$1424_CMP = 1'1
      Activation pattern for cell $flatten\uart_inst.$shl$uart.v:0$321: $flatten\uart_inst.$procmux$1424_CMP = 1'1
      Size of SAT problem: 0 cells, 15 variables, 34 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: $flatten\uart_inst.$procmux$1424_CMP = 1'1
  Analyzing resource sharing options for $flatten\uart_inst.$shl$uart.v:0$321 ($shl):
    Found 1 activation_patterns using ctrl signal $flatten\uart_inst.$procmux$1424_CMP.
    No candidates found.

19.17. Executing TECHMAP pass (map to technology primitives).

19.17.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/cmp2lut.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

19.17.2. Continuing TECHMAP pass.
Using template $paramod$e36e3a697f04fcdd16783fcbd48505b7bb8a0dde\_90_lut_cmp_ for cells of type $ge.
No more expansions possible.
<suppressed ~62 debug messages>

19.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~1 debug messages>

19.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

19.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top_level:
  creating $macc model for $add$top_level.v:62$3 ($add).
  creating $macc model for $flatten\sense_module_inst.$add$sense_module.v:106$65 ($add).
  creating $macc model for $flatten\sense_module_inst.$add$sense_module.v:141$94 ($add).
  creating $macc model for $flatten\sense_module_inst.$add$sense_module.v:193$105 ($add).
  creating $macc model for $flatten\sense_module_inst.\aes_inst.$add$aes/aes.v:110$118 ($add).
  creating $macc model for $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$add$aes/subbytes.v:38$293 ($add).
  creating $macc model for $flatten\uart_inst.$add$uart.v:129$336 ($add).
  creating $macc model for $flatten\uart_inst.$add$uart.v:141$340 ($add).
  creating $macc model for $flatten\uart_inst.$add$uart.v:61$316 ($add).
  creating $macc model for $flatten\uart_inst.$add$uart.v:74$328 ($add).
  creating $alu model for $macc $flatten\uart_inst.$add$uart.v:74$328.
  creating $alu model for $macc $flatten\uart_inst.$add$uart.v:61$316.
  creating $alu model for $macc $flatten\uart_inst.$add$uart.v:141$340.
  creating $alu model for $macc $flatten\uart_inst.$add$uart.v:129$336.
  creating $alu model for $macc $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$add$aes/subbytes.v:38$293.
  creating $alu model for $macc $flatten\sense_module_inst.\aes_inst.$add$aes/aes.v:110$118.
  creating $alu model for $macc $flatten\sense_module_inst.$add$sense_module.v:193$105.
  creating $alu model for $macc $flatten\sense_module_inst.$add$sense_module.v:141$94.
  creating $alu model for $macc $flatten\sense_module_inst.$add$sense_module.v:106$65.
  creating $alu model for $macc $add$top_level.v:62$3.
  creating $alu model for $lt$top_level.v:61$2 ($lt): new $alu
  creating $alu cell for $lt$top_level.v:61$2: $auto$alumacc.cc:485:replace_alu$1820
  creating $alu cell for $add$top_level.v:62$3: $auto$alumacc.cc:485:replace_alu$1831
  creating $alu cell for $flatten\sense_module_inst.$add$sense_module.v:106$65: $auto$alumacc.cc:485:replace_alu$1834
  creating $alu cell for $flatten\sense_module_inst.$add$sense_module.v:141$94: $auto$alumacc.cc:485:replace_alu$1837
  creating $alu cell for $flatten\sense_module_inst.$add$sense_module.v:193$105: $auto$alumacc.cc:485:replace_alu$1840
  creating $alu cell for $flatten\sense_module_inst.\aes_inst.$add$aes/aes.v:110$118: $auto$alumacc.cc:485:replace_alu$1843
  creating $alu cell for $flatten\sense_module_inst.\aes_inst.\subbytes_inst.$add$aes/subbytes.v:38$293: $auto$alumacc.cc:485:replace_alu$1846
  creating $alu cell for $flatten\uart_inst.$add$uart.v:129$336: $auto$alumacc.cc:485:replace_alu$1849
  creating $alu cell for $flatten\uart_inst.$add$uart.v:141$340: $auto$alumacc.cc:485:replace_alu$1852
  creating $alu cell for $flatten\uart_inst.$add$uart.v:61$316: $auto$alumacc.cc:485:replace_alu$1855
  creating $alu cell for $flatten\uart_inst.$add$uart.v:74$328: $auto$alumacc.cc:485:replace_alu$1858
  created 11 $alu and 0 $macc cells.

19.21. Executing OPT pass (performing simple optimizations).

19.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~2 debug messages>

19.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

19.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

19.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

19.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

19.21.6. Executing OPT_DFF pass (perform DFF optimizations).

19.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

19.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.21.9. Rerunning OPT passes. (Maybe there is more to do..)

19.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~49 debug messages>

19.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

19.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.21.13. Executing OPT_DFF pass (perform DFF optimizations).

19.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.21.16. Finished OPT passes. (There is nothing left to do.)

19.22. Executing MEMORY pass.

19.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

19.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

19.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

19.22.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

19.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.22.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

19.22.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

19.22.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.22.9. Executing MEMORY_COLLECT pass (generating $mem cells).

19.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

19.25. Executing TECHMAP pass (map to technology primitives).

19.25.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

19.25.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

19.26. Executing ICE40_BRAMINIT pass.

19.27. Executing OPT pass (performing simple optimizations).

19.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~179 debug messages>

19.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$1725 ($dffe) from module top_level (D = { \sense_module_inst.aes_inst.keysched_inst.next_key_tmp[3] \sense_module_inst.aes_inst.keysched_inst.next_key_tmp[2] \sense_module_inst.aes_inst.keysched_inst.next_key_tmp[1] \sense_module_inst.aes_inst.keysched_inst.next_key_tmp[0] }, Q = \sense_module_inst.aes_inst.key, rval = 128'00111100010011111100111100001001100010000001010111110111101010111010011011010010101011100010100000010110000101010111111000101011).
Adding SRST signal on $auto$ff.cc:262:slice$1642 ($dffe) from module top_level (D = $flatten\uart_inst.$4$lookahead\rxdataout$301[7:0]$320, Q = \uart_inst.rxdataout, rval = 8'00000000).

19.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 2 unused cells and 95 unused wires.
<suppressed ~3 debug messages>

19.27.5. Rerunning OPT passes. (Removed registers in this run.)

19.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.27.8. Executing OPT_DFF pass (perform DFF optimizations).

19.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.27.10. Finished fast OPT passes.

19.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

19.29. Executing OPT pass (performing simple optimizations).

19.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~41 debug messages>

19.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.$procmux$1187:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$1807 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$1807 [0]
      New connections: $auto$wreduce.cc:454:run$1807 [1] = $auto$wreduce.cc:454:run$1807 [0]
    Consolidated identical input bits for $pmux cell $flatten\sense_module_inst.$procmux$1189:
      Old ports: A=3'000, B={ 2'00 $auto$wreduce.cc:454:run$1808 [0] 1'0 $auto$wreduce.cc:454:run$1809 [1:0] 2'01 $auto$wreduce.cc:454:run$1808 [0] 1'0 $auto$wreduce.cc:454:run$1807 [1:0] }, Y=$flatten\sense_module_inst.$0\state[2:0]
      New ports: A=2'00, B={ 1'0 $auto$wreduce.cc:454:run$1808 [0] $auto$wreduce.cc:454:run$1809 [1:0] 1'1 $auto$wreduce.cc:454:run$1808 [0] $auto$wreduce.cc:454:run$1807 [1:0] }, Y=$flatten\sense_module_inst.$0\state[2:0] [1:0]
      New connections: $flatten\sense_module_inst.$0\state[2:0] [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.$procmux$885:
      Old ports: A=3'001, B=3'110, Y=$flatten\sense_module_inst.\aes_inst.$procmux$885_Y
      New ports: A=2'01, B=2'10, Y=$flatten\sense_module_inst.\aes_inst.$procmux$885_Y [1:0]
      New connections: $flatten\sense_module_inst.\aes_inst.$procmux$885_Y [2] = $flatten\sense_module_inst.\aes_inst.$procmux$885_Y [1]
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.$procmux$890:
      Old ports: A=3'101, B=3'011, Y=$flatten\sense_module_inst.\aes_inst.$procmux$890_Y
      New ports: A=2'10, B=2'01, Y=$flatten\sense_module_inst.\aes_inst.$procmux$890_Y [2:1]
      New connections: $flatten\sense_module_inst.\aes_inst.$procmux$890_Y [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column0_inst.\xb0.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [6:0] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [6:4] $auto$opt_expr.cc:205:group_cell_inputs$1864 [6:5] \sense_module_inst.aes_inst.aes_state [1] $auto$opt_expr.cc:205:group_cell_inputs$1864 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b0_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [3:2] \sense_module_inst.aes_inst.aes_state [0] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1864 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b0_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b0_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b0_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b0_2 [2] } = { \sense_module_inst.aes_inst.aes_state [6:4] \sense_module_inst.aes_inst.aes_state [1] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column0_inst.\xb1.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [14:8] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [14:12] $auto$opt_expr.cc:205:group_cell_inputs$1984 [6:5] \sense_module_inst.aes_inst.aes_state [9] $auto$opt_expr.cc:205:group_cell_inputs$1984 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b1_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [11:10] \sense_module_inst.aes_inst.aes_state [8] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1984 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b1_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b1_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b1_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b1_2 [2] } = { \sense_module_inst.aes_inst.aes_state [14:12] \sense_module_inst.aes_inst.aes_state [9] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column0_inst.\xb2.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [22:16] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [22:20] $auto$opt_expr.cc:205:group_cell_inputs$1993 [6:5] \sense_module_inst.aes_inst.aes_state [17] $auto$opt_expr.cc:205:group_cell_inputs$1993 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b2_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [19:18] \sense_module_inst.aes_inst.aes_state [16] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1993 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b2_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b2_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b2_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b2_2 [2] } = { \sense_module_inst.aes_inst.aes_state [22:20] \sense_module_inst.aes_inst.aes_state [17] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column0_inst.\xb3.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [30:24] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [30:28] $auto$opt_expr.cc:205:group_cell_inputs$2002 [6:5] \sense_module_inst.aes_inst.aes_state [25] $auto$opt_expr.cc:205:group_cell_inputs$2002 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b3_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [27:26] \sense_module_inst.aes_inst.aes_state [24] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$2002 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b3_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b3_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b3_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column0_inst.b3_2 [2] } = { \sense_module_inst.aes_inst.aes_state [30:28] \sense_module_inst.aes_inst.aes_state [25] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column1_inst.\xb0.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [38:32] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [38:36] $auto$opt_expr.cc:205:group_cell_inputs$1957 [6:5] \sense_module_inst.aes_inst.aes_state [33] $auto$opt_expr.cc:205:group_cell_inputs$1957 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b0_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [35:34] \sense_module_inst.aes_inst.aes_state [32] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1957 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b0_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b0_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b0_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b0_2 [2] } = { \sense_module_inst.aes_inst.aes_state [38:36] \sense_module_inst.aes_inst.aes_state [33] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column1_inst.\xb1.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [46:40] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [46:44] $auto$opt_expr.cc:205:group_cell_inputs$1948 [6:5] \sense_module_inst.aes_inst.aes_state [41] $auto$opt_expr.cc:205:group_cell_inputs$1948 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b1_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [43:42] \sense_module_inst.aes_inst.aes_state [40] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1948 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b1_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b1_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b1_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b1_2 [2] } = { \sense_module_inst.aes_inst.aes_state [46:44] \sense_module_inst.aes_inst.aes_state [41] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column1_inst.\xb2.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [54:48] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [54:52] $auto$opt_expr.cc:205:group_cell_inputs$1966 [6:5] \sense_module_inst.aes_inst.aes_state [49] $auto$opt_expr.cc:205:group_cell_inputs$1966 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b2_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [51:50] \sense_module_inst.aes_inst.aes_state [48] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1966 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b2_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b2_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b2_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b2_2 [2] } = { \sense_module_inst.aes_inst.aes_state [54:52] \sense_module_inst.aes_inst.aes_state [49] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column1_inst.\xb3.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [62:56] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [62:60] $auto$opt_expr.cc:205:group_cell_inputs$1975 [6:5] \sense_module_inst.aes_inst.aes_state [57] $auto$opt_expr.cc:205:group_cell_inputs$1975 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b3_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [59:58] \sense_module_inst.aes_inst.aes_state [56] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1975 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b3_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b3_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b3_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column1_inst.b3_2 [2] } = { \sense_module_inst.aes_inst.aes_state [62:60] \sense_module_inst.aes_inst.aes_state [57] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column2_inst.\xb0.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [70:64] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [70:68] $auto$opt_expr.cc:205:group_cell_inputs$1921 [6:5] \sense_module_inst.aes_inst.aes_state [65] $auto$opt_expr.cc:205:group_cell_inputs$1921 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b0_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [67:66] \sense_module_inst.aes_inst.aes_state [64] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1921 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b0_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b0_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b0_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b0_2 [2] } = { \sense_module_inst.aes_inst.aes_state [70:68] \sense_module_inst.aes_inst.aes_state [65] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column2_inst.\xb1.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [78:72] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [78:76] $auto$opt_expr.cc:205:group_cell_inputs$1912 [6:5] \sense_module_inst.aes_inst.aes_state [73] $auto$opt_expr.cc:205:group_cell_inputs$1912 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b1_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [75:74] \sense_module_inst.aes_inst.aes_state [72] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1912 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b1_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b1_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b1_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b1_2 [2] } = { \sense_module_inst.aes_inst.aes_state [78:76] \sense_module_inst.aes_inst.aes_state [73] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column2_inst.\xb2.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [86:80] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [86:84] $auto$opt_expr.cc:205:group_cell_inputs$1930 [6:5] \sense_module_inst.aes_inst.aes_state [81] $auto$opt_expr.cc:205:group_cell_inputs$1930 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b2_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [83:82] \sense_module_inst.aes_inst.aes_state [80] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1930 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b2_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b2_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b2_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b2_2 [2] } = { \sense_module_inst.aes_inst.aes_state [86:84] \sense_module_inst.aes_inst.aes_state [81] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column2_inst.\xb3.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [94:88] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [94:92] $auto$opt_expr.cc:205:group_cell_inputs$1939 [6:5] \sense_module_inst.aes_inst.aes_state [89] $auto$opt_expr.cc:205:group_cell_inputs$1939 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b3_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [91:90] \sense_module_inst.aes_inst.aes_state [88] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1939 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b3_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b3_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b3_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column2_inst.b3_2 [2] } = { \sense_module_inst.aes_inst.aes_state [94:92] \sense_module_inst.aes_inst.aes_state [89] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column3_inst.\xb0.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [102:96] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [102:100] $auto$opt_expr.cc:205:group_cell_inputs$1885 [6:5] \sense_module_inst.aes_inst.aes_state [97] $auto$opt_expr.cc:205:group_cell_inputs$1885 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b0_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [99:98] \sense_module_inst.aes_inst.aes_state [96] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1885 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b0_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b0_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b0_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b0_2 [2] } = { \sense_module_inst.aes_inst.aes_state [102:100] \sense_module_inst.aes_inst.aes_state [97] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column3_inst.\xb1.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [110:104] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [110:108] $auto$opt_expr.cc:205:group_cell_inputs$1876 [6:5] \sense_module_inst.aes_inst.aes_state [105] $auto$opt_expr.cc:205:group_cell_inputs$1876 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b1_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [107:106] \sense_module_inst.aes_inst.aes_state [104] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1876 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b1_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b1_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b1_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b1_2 [2] } = { \sense_module_inst.aes_inst.aes_state [110:108] \sense_module_inst.aes_inst.aes_state [105] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column3_inst.\xb2.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [118:112] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [118:116] $auto$opt_expr.cc:205:group_cell_inputs$1894 [6:5] \sense_module_inst.aes_inst.aes_state [113] $auto$opt_expr.cc:205:group_cell_inputs$1894 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b2_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [115:114] \sense_module_inst.aes_inst.aes_state [112] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1894 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b2_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b2_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b2_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b2_2 [2] } = { \sense_module_inst.aes_inst.aes_state [118:116] \sense_module_inst.aes_inst.aes_state [113] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\aes_inst.\mixcolumns_inst.\column3_inst.\xb3.$procmux$780:
      Old ports: A={ \sense_module_inst.aes_inst.aes_state [126:120] 1'0 }, B={ \sense_module_inst.aes_inst.aes_state [126:124] $auto$opt_expr.cc:205:group_cell_inputs$1903 [6:5] \sense_module_inst.aes_inst.aes_state [121] $auto$opt_expr.cc:205:group_cell_inputs$1903 [4] 1'1 }, Y=\sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b3_2
      New ports: A={ \sense_module_inst.aes_inst.aes_state [123:122] \sense_module_inst.aes_inst.aes_state [120] 1'0 }, B={ $auto$opt_expr.cc:205:group_cell_inputs$1903 [6:4] 1'1 }, Y={ \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b3_2 [4:3] \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b3_2 [1:0] }
      New connections: { \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b3_2 [7:5] \sense_module_inst.aes_inst.mixcolumns_inst.column3_inst.b3_2 [2] } = { \sense_module_inst.aes_inst.aes_state [126:124] \sense_module_inst.aes_inst.aes_state [121] }
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1142:
      Old ports: A={ 6'000000 \sense_module_inst.sensor_dec_inst.sensebuf [0] }, B=7'0000010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$2\count[6:0]
      New ports: A={ 1'0 \sense_module_inst.sensor_dec_inst.sensebuf [0] }, B=2'10, Y=$flatten\sense_module_inst.\sensor_dec_inst.$2\count[6:0] [1:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$2\count[6:0] [6:2] = 5'00000
    Consolidated identical input bits for $mux cell $flatten\uart_inst.$procmux$1438:
      Old ports: A=2'11, B=2'00, Y=$flatten\uart_inst.$procmux$1438_Y
      New ports: A=1'1, B=1'0, Y=$flatten\uart_inst.$procmux$1438_Y [0]
      New connections: $flatten\uart_inst.$procmux$1438_Y [1] = $flatten\uart_inst.$procmux$1438_Y [0]
    Consolidated identical input bits for $mux cell $flatten\uart_inst.$procmux$1446:
      Old ports: A=2'10, B={ 1'1 $flatten\uart_inst.$eq$uart.v:70$327_Y }, Y=$flatten\uart_inst.$procmux$1446_Y
      New ports: A=1'0, B=$flatten\uart_inst.$eq$uart.v:70$327_Y, Y=$flatten\uart_inst.$procmux$1446_Y [0]
      New connections: $flatten\uart_inst.$procmux$1446_Y [1] = 1'1
    Consolidated identical input bits for $mux cell $flatten\uart_inst.$procmux$1451:
      Old ports: A=2'10, B=2'00, Y=$flatten\uart_inst.$procmux$1451_Y
      New ports: A=1'1, B=1'0, Y=$flatten\uart_inst.$procmux$1451_Y [1]
      New connections: $flatten\uart_inst.$procmux$1451_Y [0] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1139:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$2\count[6:0], B=7'0000011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$3\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$2\count[6:0] [1:0], B=2'11, Y=$flatten\sense_module_inst.\sensor_dec_inst.$3\count[6:0] [1:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$3\count[6:0] [6:2] = 5'00000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1136:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$3\count[6:0], B=7'0000100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$4\count[6:0]
      New ports: A={ 1'0 $flatten\sense_module_inst.\sensor_dec_inst.$3\count[6:0] [1:0] }, B=3'100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$4\count[6:0] [2:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$4\count[6:0] [6:3] = 4'0000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1133:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$4\count[6:0], B=7'0000101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$5\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$4\count[6:0] [2:0], B=3'101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$5\count[6:0] [2:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$5\count[6:0] [6:3] = 4'0000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1130:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$5\count[6:0], B=7'0000110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$6\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$5\count[6:0] [2:0], B=3'110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$6\count[6:0] [2:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$6\count[6:0] [6:3] = 4'0000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1127:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$6\count[6:0], B=7'0000111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$7\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$6\count[6:0] [2:0], B=3'111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$7\count[6:0] [2:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$7\count[6:0] [6:3] = 4'0000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1124:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$7\count[6:0], B=7'0001000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$8\count[6:0]
      New ports: A={ 1'0 $flatten\sense_module_inst.\sensor_dec_inst.$7\count[6:0] [2:0] }, B=4'1000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$8\count[6:0] [3:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$8\count[6:0] [6:4] = 3'000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1121:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$8\count[6:0], B=7'0001001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$9\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$8\count[6:0] [3:0], B=4'1001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$9\count[6:0] [3:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$9\count[6:0] [6:4] = 3'000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1118:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$9\count[6:0], B=7'0001010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$10\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$9\count[6:0] [3:0], B=4'1010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$10\count[6:0] [3:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$10\count[6:0] [6:4] = 3'000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1115:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$10\count[6:0], B=7'0001011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$11\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$10\count[6:0] [3:0], B=4'1011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$11\count[6:0] [3:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$11\count[6:0] [6:4] = 3'000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1112:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$11\count[6:0], B=7'0001100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$12\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$11\count[6:0] [3:0], B=4'1100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$12\count[6:0] [3:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$12\count[6:0] [6:4] = 3'000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1109:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$12\count[6:0], B=7'0001101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$13\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$12\count[6:0] [3:0], B=4'1101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$13\count[6:0] [3:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$13\count[6:0] [6:4] = 3'000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1106:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$13\count[6:0], B=7'0001110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$14\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$13\count[6:0] [3:0], B=4'1110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$14\count[6:0] [3:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$14\count[6:0] [6:4] = 3'000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1103:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$14\count[6:0], B=7'0001111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$15\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$14\count[6:0] [3:0], B=4'1111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$15\count[6:0] [3:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$15\count[6:0] [6:4] = 3'000
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1100:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$15\count[6:0], B=7'0010000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$16\count[6:0]
      New ports: A={ 1'0 $flatten\sense_module_inst.\sensor_dec_inst.$15\count[6:0] [3:0] }, B=5'10000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$16\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$16\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1097:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$16\count[6:0], B=7'0010001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$17\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$16\count[6:0] [4:0], B=5'10001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$17\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$17\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1094:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$17\count[6:0], B=7'0010010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$18\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$17\count[6:0] [4:0], B=5'10010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$18\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$18\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1091:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$18\count[6:0], B=7'0010011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$19\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$18\count[6:0] [4:0], B=5'10011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$19\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$19\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1088:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$19\count[6:0], B=7'0010100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$20\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$19\count[6:0] [4:0], B=5'10100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$20\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$20\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1085:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$20\count[6:0], B=7'0010101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$21\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$20\count[6:0] [4:0], B=5'10101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$21\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$21\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1082:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$21\count[6:0], B=7'0010110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$22\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$21\count[6:0] [4:0], B=5'10110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$22\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$22\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1079:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$22\count[6:0], B=7'0010111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$23\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$22\count[6:0] [4:0], B=5'10111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$23\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$23\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1076:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$23\count[6:0], B=7'0011000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$24\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$23\count[6:0] [4:0], B=5'11000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$24\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$24\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1073:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$24\count[6:0], B=7'0011001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$25\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$24\count[6:0] [4:0], B=5'11001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$25\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$25\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1070:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$25\count[6:0], B=7'0011010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$26\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$25\count[6:0] [4:0], B=5'11010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$26\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$26\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1067:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$26\count[6:0], B=7'0011011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$27\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$26\count[6:0] [4:0], B=5'11011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$27\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$27\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1064:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$27\count[6:0], B=7'0011100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$28\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$27\count[6:0] [4:0], B=5'11100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$28\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$28\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1061:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$28\count[6:0], B=7'0011101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$29\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$28\count[6:0] [4:0], B=5'11101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$29\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$29\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1058:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$29\count[6:0], B=7'0011110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$30\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$29\count[6:0] [4:0], B=5'11110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$30\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$30\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1055:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$30\count[6:0], B=7'0011111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$31\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$30\count[6:0] [4:0], B=5'11111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$31\count[6:0] [4:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$31\count[6:0] [6:5] = 2'00
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1052:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$31\count[6:0], B=7'0100000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$32\count[6:0]
      New ports: A={ 1'0 $flatten\sense_module_inst.\sensor_dec_inst.$31\count[6:0] [4:0] }, B=6'100000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$32\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$32\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1049:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$32\count[6:0], B=7'0100001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$33\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$32\count[6:0] [5:0], B=6'100001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$33\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$33\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1046:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$33\count[6:0], B=7'0100010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$34\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$33\count[6:0] [5:0], B=6'100010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$34\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$34\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1043:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$34\count[6:0], B=7'0100011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$35\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$34\count[6:0] [5:0], B=6'100011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$35\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$35\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1040:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$35\count[6:0], B=7'0100100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$36\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$35\count[6:0] [5:0], B=6'100100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$36\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$36\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1037:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$36\count[6:0], B=7'0100101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$37\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$36\count[6:0] [5:0], B=6'100101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$37\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$37\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1034:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$37\count[6:0], B=7'0100110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$38\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$37\count[6:0] [5:0], B=6'100110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$38\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$38\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1031:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$38\count[6:0], B=7'0100111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$39\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$38\count[6:0] [5:0], B=6'100111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$39\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$39\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1028:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$39\count[6:0], B=7'0101000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$40\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$39\count[6:0] [5:0], B=6'101000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$40\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$40\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1025:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$40\count[6:0], B=7'0101001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$41\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$40\count[6:0] [5:0], B=6'101001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$41\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$41\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1022:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$41\count[6:0], B=7'0101010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$42\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$41\count[6:0] [5:0], B=6'101010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$42\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$42\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1019:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$42\count[6:0], B=7'0101011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$43\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$42\count[6:0] [5:0], B=6'101011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$43\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$43\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1016:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$43\count[6:0], B=7'0101100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$44\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$43\count[6:0] [5:0], B=6'101100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$44\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$44\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1013:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$44\count[6:0], B=7'0101101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$45\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$44\count[6:0] [5:0], B=6'101101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$45\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$45\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1010:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$45\count[6:0], B=7'0101110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$46\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$45\count[6:0] [5:0], B=6'101110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$46\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$46\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1007:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$46\count[6:0], B=7'0101111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$47\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$46\count[6:0] [5:0], B=6'101111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$47\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$47\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1004:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$47\count[6:0], B=7'0110000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$48\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$47\count[6:0] [5:0], B=6'110000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$48\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$48\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$1001:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$48\count[6:0], B=7'0110001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$49\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$48\count[6:0] [5:0], B=6'110001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$49\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$49\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$998:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$49\count[6:0], B=7'0110010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$50\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$49\count[6:0] [5:0], B=6'110010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$50\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$50\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$995:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$50\count[6:0], B=7'0110011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$51\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$50\count[6:0] [5:0], B=6'110011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$51\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$51\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$992:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$51\count[6:0], B=7'0110100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$52\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$51\count[6:0] [5:0], B=6'110100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$52\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$52\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$989:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$52\count[6:0], B=7'0110101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$53\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$52\count[6:0] [5:0], B=6'110101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$53\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$53\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$986:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$53\count[6:0], B=7'0110110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$54\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$53\count[6:0] [5:0], B=6'110110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$54\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$54\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$983:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$54\count[6:0], B=7'0110111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$55\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$54\count[6:0] [5:0], B=6'110111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$55\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$55\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$980:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$55\count[6:0], B=7'0111000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$56\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$55\count[6:0] [5:0], B=6'111000, Y=$flatten\sense_module_inst.\sensor_dec_inst.$56\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$56\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$977:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$56\count[6:0], B=7'0111001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$57\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$56\count[6:0] [5:0], B=6'111001, Y=$flatten\sense_module_inst.\sensor_dec_inst.$57\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$57\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$974:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$57\count[6:0], B=7'0111010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$58\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$57\count[6:0] [5:0], B=6'111010, Y=$flatten\sense_module_inst.\sensor_dec_inst.$58\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$58\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$971:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$58\count[6:0], B=7'0111011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$59\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$58\count[6:0] [5:0], B=6'111011, Y=$flatten\sense_module_inst.\sensor_dec_inst.$59\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$59\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$968:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$59\count[6:0], B=7'0111100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$60\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$59\count[6:0] [5:0], B=6'111100, Y=$flatten\sense_module_inst.\sensor_dec_inst.$60\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$60\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$965:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$60\count[6:0], B=7'0111101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$61\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$60\count[6:0] [5:0], B=6'111101, Y=$flatten\sense_module_inst.\sensor_dec_inst.$61\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$61\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$962:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$61\count[6:0], B=7'0111110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$62\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$61\count[6:0] [5:0], B=6'111110, Y=$flatten\sense_module_inst.\sensor_dec_inst.$62\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$62\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
    Consolidated identical input bits for $mux cell $flatten\sense_module_inst.\sensor_dec_inst.$procmux$959:
      Old ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$62\count[6:0], B=7'0111111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$63\count[6:0]
      New ports: A=$flatten\sense_module_inst.\sensor_dec_inst.$62\count[6:0] [5:0], B=6'111111, Y=$flatten\sense_module_inst.\sensor_dec_inst.$63\count[6:0] [5:0]
      New connections: $flatten\sense_module_inst.\sensor_dec_inst.$63\count[6:0] [6] = 1'0
  Optimizing cells in module \top_level.
Performed a total of 85 changes.

19.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

19.29.6. Executing OPT_DFF pass (perform DFF optimizations).

19.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

19.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.29.9. Rerunning OPT passes. (Maybe there is more to do..)

19.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

19.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

19.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 2 on $flatten\sense_module_inst.$procdff$1575 ($adff) from module top_level.

19.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~1 debug messages>

19.29.16. Rerunning OPT passes. (Maybe there is more to do..)

19.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top_level..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~42 debug messages>

19.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top_level.
Performed a total of 0 changes.

19.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.29.20. Executing OPT_DFF pass (perform DFF optimizations).

19.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.29.23. Finished OPT passes. (There is nothing left to do.)

19.30. Executing ICE40_WRAPCARRY pass (wrap carries).
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.
  replacing SB_LUT + SB_CARRY with $__ICE40_CARRY_WRAPPER cell.

19.31. Executing TECHMAP pass (map to technology primitives).

19.31.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/techmap.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

19.31.2. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

19.31.3. Continuing TECHMAP pass.
Using template $paramod$36fdbc18fab0758c8553dda57bd33e3f8f3e8765\_80_ice40_alu for cells of type $alu.
Using template $paramod$53700bbee849b2010ad0b60a61ccd204a10e24ca\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$0d149ffe75563ef6fcc1a3dddc59d00af28651a7\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $eq.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:ee5af906ae0d3d414c6a0471604c553ef70c8e09$paramod$92adee9538f2381d8e5006822c900eb986d754e8\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$2af30114e9bd4ccb04dad757b3f0a8f6bf0615b0\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using template $paramod$constmap:f062eb9b59fe112e8a37f22ba8867a126e0dc845$paramod$3b3a66a7766bf28794ddcd35314b025da1fe57c8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Analyzing pattern of constant bits for this cell:
  Constant input on bit 0 of port A: 1'1
Creating constmapped module `$paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$3b3a66a7766bf28794ddcd35314b025da1fe57c8\_90_shift_ops_shr_shl_sshl_sshr'.

19.31.28. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$3b3a66a7766bf28794ddcd35314b025da1fe57c8\_90_shift_ops_shr_shl_sshl_sshr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~550 debug messages>

19.31.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$3b3a66a7766bf28794ddcd35314b025da1fe57c8\_90_shift_ops_shr_shl_sshl_sshr.
<suppressed ~35 debug messages>
Removed 0 unused cells and 8 unused wires.
Using template $paramod$constmap:1b6115d36d46c0296d0024e3e3623593810ba834$paramod$3b3a66a7766bf28794ddcd35314b025da1fe57c8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $lut.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$448756c9a9dfaa49080ce4b90c6cc182883e181f\_80_ice40_alu for cells of type $alu.
Using template $paramod$57f63e8a3282e053be0430389b09fa050ac7dca0\_90_pmux for cells of type $pmux.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$43474339bb8db435b978167d91ed8375399562e7\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $dffe.
Using template $paramod$constmap:6b1ead7cae3a323800a6bf6912bf323d0516f768$paramod$66b601bdae218d7651dec7014a62215e49985c3b\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$constmap:6151d8cad8bad1a9a7a855c784166057892e2df0$paramod$0c7fee553aafd83d589452dec9b277ab38cedc1e\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:4f3a4e8c10f7787c19a59763af61912a5eded18f$paramod$298f0b605e16bc2b79aba056369deb3578aac7b8\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$8cb56ea4af20bc5206a0050d3126d66b7cc022cc\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $xnor.
Using template $paramod$92cf01bf728df7e0842e2c2f058ab4e418831778\_90_pmux for cells of type $pmux.
Using template $paramod$068ad458e7761d78e5eed8238508872e7b0aef95\_90_pmux for cells of type $pmux.
Using template $paramod$constmap:b069896d7207a13dfccd43478249f11eb1cca4d5$paramod$e3447ea8f50330d9f8e6c27edd312a407da2cea6\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$constmap:430b572c5f4afa64940a0befbb1a59960b1dad6d$paramod$e9b587c62294eccbbe22b46d11597a42d0e375b0\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$constmap:a471bdb9f7f65e30153bd1b33b567b1fd9470845$paramod$a93758a9a2618d8ad2b01c65e47b6a24083c9e3c\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$2f5fb04daf2da94d981bf9455fa4454c6ec8b705\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
No more expansions possible.
<suppressed ~9687 debug messages>

19.32. Executing OPT pass (performing simple optimizations).

19.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~2413 debug messages>

19.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~2988 debug messages>
Removed a total of 996 cells.

19.32.3. Executing OPT_DFF pass (perform DFF optimizations).

19.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 1958 unused cells and 1275 unused wires.
<suppressed ~1959 debug messages>

19.32.5. Finished fast OPT passes.

19.33. Executing ICE40_OPT pass (performing simple optimizations).

19.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1820.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$1820.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1831.slice[0].carry: CO=\counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1834.slice[0].carry: CO=\sense_module_inst.waddr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1837.slice[0].carry: CO=\sense_module_inst.bytecount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1840.slice[0].carry: CO=\sense_module_inst.raddr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1843.slice[0].carry: CO=\sense_module_inst.aes_inst.round [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1846.slice[0].carry: CO=\sense_module_inst.aes_inst.subbytes_inst.wordcount [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1849.slice[0].carry: CO=\uart_inst.txctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1852.slice[0].carry: CO=\uart_inst.txbitctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1855.slice[0].carry: CO=\uart_inst.rxctr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top_level.$auto$alumacc.cc:485:replace_alu$1858.slice[0].carry: CO=\uart_inst.rxbitctr [0]

19.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~184 debug messages>

19.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.33.4. Executing OPT_DFF pass (perform DFF optimizations).

19.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 1 unused cells and 4 unused wires.
<suppressed ~2 debug messages>

19.33.6. Rerunning OPT passes. (Removed registers in this run.)

19.33.7. Running ICE40 specific optimizations.

19.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.33.10. Executing OPT_DFF pass (perform DFF optimizations).

19.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.33.12. Finished OPT passes. (There is nothing left to do.)

19.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

19.35. Executing TECHMAP pass (map to technology primitives).

19.35.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

19.35.2. Continuing TECHMAP pass.
Using template \$_DFF_PP0_ for cells of type $_DFF_PP0_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFFE_PP0P_ for cells of type $_DFFE_PP0P_.
Using template \$_DFFE_PP1P_ for cells of type $_DFFE_PP1P_.
No more expansions possible.
<suppressed ~779 debug messages>

19.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1831.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1834.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1837.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1840.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1843.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1846.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1849.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1852.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1855.slice[0].carry ($lut).
Mapping top_level.$auto$alumacc.cc:485:replace_alu$1858.slice[0].carry ($lut).

19.38. Executing ICE40_OPT pass (performing simple optimizations).

19.38.1. Running ICE40 specific optimizations.

19.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.
<suppressed ~858 debug messages>

19.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

19.38.4. Executing OPT_DFF pass (perform DFF optimizations).

19.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..
Removed 0 unused cells and 4154 unused wires.
<suppressed ~1 debug messages>

19.38.6. Rerunning OPT passes. (Removed registers in this run.)

19.38.7. Running ICE40 specific optimizations.

19.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top_level.

19.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top_level'.
Removed a total of 0 cells.

19.38.10. Executing OPT_DFF pass (perform DFF optimizations).

19.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top_level..

19.38.12. Finished OPT passes. (There is nothing left to do.)

19.39. Executing TECHMAP pass (map to technology primitives).

19.39.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

19.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

19.40. Executing ABC pass (technology mapping using ABC).

19.40.1. Extracting gate netlist of module `\top_level' to `<abc-temp-dir>/input.blif'..
Extracted 5471 gates and 6287 wires to a netlist network with 814 inputs and 727 outputs.

19.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1255.
ABC: Participating nodes from both networks       =    2817.
ABC: Participating nodes from the first network   =    1256. (  69.66 % of nodes)
ABC: Participating nodes from the second network  =    1561. (  86.58 % of nodes)
ABC: Node pairs (any polarity)                    =    1256. (  69.66 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1077. (  59.73 % of names can be moved)
ABC: Total runtime =     0.13 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

19.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     1801
ABC RESULTS:        internal signals:     4746
ABC RESULTS:           input signals:      814
ABC RESULTS:          output signals:      727
Removing temp directory.

19.41. Executing ICE40_WRAPCARRY pass (wrap carries).

19.42. Executing TECHMAP pass (map to technology primitives).

19.42.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

19.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 32 unused cells and 2896 unused wires.

19.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     1957
  1-LUT               26
  2-LUT              375
  3-LUT              558
  4-LUT              998
  with \SB_CARRY    (#0)  147
  with \SB_CARRY    (#1)  147

Eliminating LUTs.
Number of LUTs:     1957
  1-LUT               26
  2-LUT              375
  3-LUT              558
  4-LUT              998
  with \SB_CARRY    (#0)  147
  with \SB_CARRY    (#1)  147

Combining LUTs.
Number of LUTs:     1897
  1-LUT               26
  2-LUT              310
  3-LUT              509
  4-LUT             1052
  with \SB_CARRY    (#0)  147
  with \SB_CARRY    (#1)  147

Eliminated 0 LUTs.
Combined 60 LUTs.
<suppressed ~18243 debug messages>

19.44. Executing TECHMAP pass (map to technology primitives).

19.44.1. Executing Verilog-2005 frontend: /home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/home/ahmet-bedri/Documents/oss-cad-suite/lib/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

19.44.2. Continuing TECHMAP pass.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$1a64f21ea15b05b7fc930804a66f6689ebbd6394\$lut for cells of type $lut.
Using template $paramod$6a34cd5b50e324824168b4186d0b04ba5e83b039\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$b56193ab97821a8443232c123d95a4632f2bc92f\$lut for cells of type $lut.
Using template $paramod$f906ade4c1bb19b66f40326811afd17989b3ecc5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$6c15da6150ce36eeff7fb8c09f7ef22f5448d679\$lut for cells of type $lut.
Using template $paramod$4cf5305612d86489c1a6171729557670bf08582e\$lut for cells of type $lut.
Using template $paramod$ca1d48527df516f209cb40a6149324209c84bc69\$lut for cells of type $lut.
Using template $paramod$3bcd6314de23180573ecc5a7e6c63581f0c5beef\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$3556aeda78d589b994dd89addec8423bbcc4693a\$lut for cells of type $lut.
Using template $paramod$d567bba3e8ea5142deb2586d5045a7f7828e2b2a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$40b3e29a4244a9c50fb36e50146e252a37185773\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$97f21fc6caedb01e3e413e66042b2fa0473d00e4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$44587907eb547902863ad65ee925d87164ab0cc4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$c6c16ab3fe5d82eaabeddf9c9e0b8cd0b22492e0\$lut for cells of type $lut.
Using template $paramod$8f0b0bf22354563ce7bc03326d0fa9ecbcb10021\$lut for cells of type $lut.
Using template $paramod$ed0943ee3c927d3ede35577c671eb805d6517c89\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$58eeb77235a0ca2f890419ea9319cfc4bcd0f07d\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$400e70ab40bc034f95288d674157da21bbd1fd4b\$lut for cells of type $lut.
Using template $paramod$2bdfdda73873e8931790d872b72220895e67fee5\$lut for cells of type $lut.
Using template $paramod$20e12a4be4a60957b67a5bafbd5369c7a7935ee6\$lut for cells of type $lut.
Using template $paramod$1282beb52fbf06cc092828b592fc29f62fa095a2\$lut for cells of type $lut.
Using template $paramod$ea7419ff6f6452aaa60b5fae9427d18768662f06\$lut for cells of type $lut.
Using template $paramod$48301e7da4a48a227440c2d3e407496f683d51aa\$lut for cells of type $lut.
Using template $paramod$a49123d498c133daff33f4d5d64f78ffef9a3126\$lut for cells of type $lut.
Using template $paramod$db17a9a11e777f7a9691b0c8dcc9d5785e9de410\$lut for cells of type $lut.
Using template $paramod$137b06d4b29e6f2a39a254e3f620395b0ced7182\$lut for cells of type $lut.
Using template $paramod$78e1751931755f088c8bc676bcbc3bb642c26bfc\$lut for cells of type $lut.
Using template $paramod$b22e1de0c50840dcbbf24001663ffaaba9d5d7b8\$lut for cells of type $lut.
Using template $paramod$1f3b67373a23476b64a6ed61bde9dbe9df1086de\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$51307cdec77060d17363ea3d60427c9afef1ddc2\$lut for cells of type $lut.
Using template $paramod$1307f430048519f43ab1ac47bdca16ced42e5270\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$97e449d15b607612c49291044eca4e2c8b59088e\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$680fd8d179aaa2b94b3b7c0dab400ac18bb55c38\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$cd6c4b4da6d8737b72fd2dc8f5d83d8967445809\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$2d41e84d8a20fdfcf9ef269ad61c0ae8747d3e8f\$lut for cells of type $lut.
Using template $paramod$acaf438e6f4f31b5725b67e171b88692c75d36a3\$lut for cells of type $lut.
Using template $paramod$65638f8febbdd45770f403709fe5a3c8c1481fab\$lut for cells of type $lut.
Using template $paramod$37a681cf98b28b2d646d3303659392dad2783d4c\$lut for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod$acf49cb7bd2805dee4b4ebb218aa5924b1be7704\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$7f04afd790aa891c7a9dc097f192069d4222c753\$lut for cells of type $lut.
Using template $paramod$db8f450e6662991ef955879419e948046224222e\$lut for cells of type $lut.
Using template $paramod$f7d8df454774f083fd7de130afc8278cf7f3cdd6\$lut for cells of type $lut.
Using template $paramod$6ecfe000848b9740ac3a9e9cea271f01b9898067\$lut for cells of type $lut.
Using template $paramod$7d7a4daebacd1b0953bba09a5fde0e48eea4243b\$lut for cells of type $lut.
Using template $paramod$17f089f553d7320d017a901fa3167e27a641122e\$lut for cells of type $lut.
Using template $paramod$ed8c03ad511f650cbc130404bfb483f77070eec3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100001 for cells of type $lut.
Using template $paramod$77a79c63321da6f25f9b54063a156fd8ed6af952\$lut for cells of type $lut.
Using template $paramod$69f20e0703606f2ffd2ee27cd26f815bd5eeb6e9\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$8e3773844cf53070daf83176994b8c387e4d0027\$lut for cells of type $lut.
Using template $paramod$a29036953b3afae1f1e83b27092b7ba0d658255a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001011 for cells of type $lut.
Using template $paramod$98d40e23bb57d56e14345fb0942003de3e361f25\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$789c78f196b745ac8416d4350180b8715831126b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$57f86e5e84c6b4e2c2690a842275a70ba70245aa\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$ac7319876965a3c02b346d2c407b7e37f9878229\$lut for cells of type $lut.
Using template $paramod$a3d9d50a26c80b5c42d9b864ac52f329113a426e\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$a44bfc089ebe40b83c2c06bb965c500df992ecfb\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$6bca8d345d26829068ad91403a25fbe3e0885c1a\$lut for cells of type $lut.
Using template $paramod$7e0277340d3f34d16bb7c3938d5c21ff955fcc9d\$lut for cells of type $lut.
Using template $paramod$733dfd4d209dc1a6e016c6f00703d3ad45999a76\$lut for cells of type $lut.
Using template $paramod$fccccf8bb2add7667329c686feec7546eb9a3ae3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$8a688b470fbdc357e4a14f08dc23c872c147c340\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$9fed01b8a0c5f6113b8ac08943943d10264f3bee\$lut for cells of type $lut.
Using template $paramod$c5ec48e05963d03505bc5b80bef941b1be7cd945\$lut for cells of type $lut.
Using template $paramod$5766b753e513aa2393ffc25ef94ebc79dc098484\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~3785 debug messages>
Removed 0 unused cells and 4155 unused wires.

19.45. Executing AUTONAME pass.
Renamed 130150 objects in module top_level (135 iterations).
<suppressed ~3771 debug messages>

19.46. Executing HIERARCHY pass (managing design hierarchy).

19.46.1. Analyzing design hierarchy..
Top module:  \top_level

19.46.2. Analyzing design hierarchy..
Top module:  \top_level
Removed 0 unused modules.

19.47. Printing statistics.

=== top_level ===

   Number of wires:               1512
   Number of wire bits:           7734
   Number of public wires:        1512
   Number of public wire bits:    7734
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2893
     SB_CARRY                      171
     SB_DFFE                       295
     SB_DFFER                      189
     SB_DFFES                        3
     SB_DFFESR                      71
     SB_DFFESS                      65
     SB_DFFN                        64
     SB_DFFR                       134
     SB_LUT4                      1899
     SB_PLL40_CORE                   1
     SB_RAM40_4K                     1

19.48. Executing CHECK pass (checking for obvious problems).
Checking module top_level...
Found and reported 0 problems.

19.49. Executing JSON backend.

End of script. Logfile hash: 8d7eb045f6, CPU: user 3.76s system 0.04s, MEM: 104.02 MB peak
Yosys 0.10+66 (git sha1 97fce665c, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 21% 1x abc (1 sec), 20% 43x opt_expr (0 sec), ...
